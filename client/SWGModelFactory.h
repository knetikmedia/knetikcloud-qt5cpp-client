/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "SWGAchievementDefinitionResource.h"
#include "SWGAchievementProgressUpdateRequest.h"
#include "SWGActionResource.h"
#include "SWGActionVariableResource.h"
#include "SWGActivityEntitlementResource.h"
#include "SWGActivityOccurrenceCreationFailure.h"
#include "SWGActivityOccurrenceJoinResult.h"
#include "SWGActivityOccurrenceResource.h"
#include "SWGActivityOccurrenceResults.h"
#include "SWGActivityResource.h"
#include "SWGActivityUserResource.h"
#include "SWGAddressResource.h"
#include "SWGAffiliate.h"
#include "SWGAggregateCountResource.h"
#include "SWGAggregateInvoiceReportResource.h"
#include "SWGAmazonS3Activity.h"
#include "SWGAnswerResource.h"
#include "SWGApplyPaymentRequest.h"
#include "SWGArticleResource.h"
#include "SWGArtist.h"
#include "SWGArtistResource.h"
#include "SWGAvailableSettingResource.h"
#include "SWGBareActivityResource.h"
#include "SWGBareChallengeActivityResource.h"
#include "SWGBatch.h"
#include "SWGBatchRequest.h"
#include "SWGBatchReturn.h"
#include "SWGBehavior.h"
#include "SWGBehaviorDefinitionResource.h"
#include "SWGBillingReport.h"
#include "SWGBooleanResource.h"
#include "SWGBreCategoryResource.h"
#include "SWGBreEvent.h"
#include "SWGBreEventLog.h"
#include "SWGBreGlobalResource.h"
#include "SWGBreGlobalScopeDefinition.h"
#include "SWGBreRule.h"
#include "SWGBreRuleLog.h"
#include "SWGBreTriggerParameterDefinition.h"
#include "SWGBreTriggerResource.h"
#include "SWGBundleItem.h"
#include "SWGBundledSku.h"
#include "SWGCampaignResource.h"
#include "SWGCart.h"
#include "SWGCartItemRequest.h"
#include "SWGCartLineItem.h"
#include "SWGCartShippableResponse.h"
#include "SWGCartShippingAddressRequest.h"
#include "SWGCartShippingOption.h"
#include "SWGCartSummary.h"
#include "SWGCatalogSale.h"
#include "SWGCategoryResource.h"
#include "SWGChallengeActivityResource.h"
#include "SWGChallengeEventParticipantResource.h"
#include "SWGChallengeEventResource.h"
#include "SWGChallengeResource.h"
#include "SWGClientResource.h"
#include "SWGCollection«Country».h"
#include "SWGCollection«VideoContribution».h"
#include "SWGCollection«string».h"
#include "SWGCommentResource.h"
#include "SWGCommentSearch.h"
#include "SWGConfig.h"
#include "SWGContributionResource.h"
#include "SWGCountry.h"
#include "SWGCountryResource.h"
#include "SWGCountryTaxResource.h"
#include "SWGCouponDefinition.h"
#include "SWGCouponItem.h"
#include "SWGCreateBillingAgreementRequest.h"
#include "SWGCreatePayPalPaymentRequest.h"
#include "SWGCurrency.h"
#include "SWGCurrencyResource.h"
#include "SWGDeltaResource.h"
#include "SWGDeviceResource.h"
#include "SWGDiscount.h"
#include "SWGDispositionCount.h"
#include "SWGDispositionResource.h"
#include "SWGEntitlementGrantRequest.h"
#include "SWGEntitlementItem.h"
#include "SWGErrorResource.h"
#include "SWGExpression«object».h"
#include "SWGFinalizeBillingAgreementRequest.h"
#include "SWGFinalizePayPalPaymentRequest.h"
#include "SWGFlagReportResource.h"
#include "SWGFlagResource.h"
#include "SWGForwardLog.h"
#include "SWGFulfillmentType.h"
#include "SWGGooglePaymentRequest.h"
#include "SWGGrantTypeResource.h"
#include "SWGGroup.h"
#include "SWGGroupMember.h"
#include "SWGGroupMemberResource.h"
#include "SWGGroupResource.h"
#include "SWGImportJobOutputResource.h"
#include "SWGImportJobResource.h"
#include "SWGInventorySubscriptionResource.h"
#include "SWGInvoiceCreateRequest.h"
#include "SWGInvoiceItemResource.h"
#include "SWGInvoiceLogEntry.h"
#include "SWGInvoicePaymentStatusRequest.h"
#include "SWGInvoiceResource.h"
#include "SWGItemBehaviorDefinitionResource.h"
#include "SWGItemTemplateResource.h"
#include "SWGKeyValuePair«string,string».h"
#include "SWGLanguage.h"
#include "SWGLeaderboardEntryResource.h"
#include "SWGLeaderboardResource.h"
#include "SWGLevelingResource.h"
#include "SWGLocalizer.h"
#include "SWGLocationLogResource.h"
#include "SWGLookupTypeResource.h"
#include "SWGMaintenance.h"
#include "SWGMap«string,object».h"
#include "SWGMetricResource.h"
#include "SWGNestedCategory.h"
#include "SWGNewPasswordRequest.h"
#include "SWGOAuth2Resource.h"
#include "SWGOauthAccessTokenResource.h"
#include "SWGOperator.h"
#include "SWGOptimalPaymentRequest.h"
#include "SWGOrder.h"
#include "SWGPageResource«AchievementDefinitionResource».h"
#include "SWGPageResource«AggregateCountResource».h"
#include "SWGPageResource«AggregateInvoiceReportResource».h"
#include "SWGPageResource«ArticleResource».h"
#include "SWGPageResource«ArtistResource».h"
#include "SWGPageResource«BareActivityResource».h"
#include "SWGPageResource«BareChallengeActivityResource».h"
#include "SWGPageResource«BillingReport».h"
#include "SWGPageResource«BreCategoryResource».h"
#include "SWGPageResource«BreEventLog».h"
#include "SWGPageResource«BreGlobalResource».h"
#include "SWGPageResource«BreRule».h"
#include "SWGPageResource«BreTriggerResource».h"
#include "SWGPageResource«CampaignResource».h"
#include "SWGPageResource«CartSummary».h"
#include "SWGPageResource«CatalogSale».h"
#include "SWGPageResource«CategoryResource».h"
#include "SWGPageResource«ChallengeEventParticipantResource».h"
#include "SWGPageResource«ChallengeEventResource».h"
#include "SWGPageResource«ChallengeResource».h"
#include "SWGPageResource«ClientResource».h"
#include "SWGPageResource«CommentResource».h"
#include "SWGPageResource«Config».h"
#include "SWGPageResource«CountryTaxResource».h"
#include "SWGPageResource«CurrencyResource».h"
#include "SWGPageResource«DeviceResource».h"
#include "SWGPageResource«DispositionResource».h"
#include "SWGPageResource«EntitlementItem».h"
#include "SWGPageResource«FlagReportResource».h"
#include "SWGPageResource«ForwardLog».h"
#include "SWGPageResource«FulfillmentType».h"
#include "SWGPageResource«GroupMemberResource».h"
#include "SWGPageResource«GroupResource».h"
#include "SWGPageResource«ImportJobResource».h"
#include "SWGPageResource«InvoiceLogEntry».h"
#include "SWGPageResource«InvoiceResource».h"
#include "SWGPageResource«ItemTemplateResource».h"
#include "SWGPageResource«LevelingResource».h"
#include "SWGPageResource«LocationLogResource».h"
#include "SWGPageResource«Map«string,object»».h"
#include "SWGPageResource«OauthAccessTokenResource».h"
#include "SWGPageResource«PermissionResource».h"
#include "SWGPageResource«PollResource».h"
#include "SWGPageResource«QuestionResource».h"
#include "SWGPageResource«QuestionTemplateResource».h"
#include "SWGPageResource«RevenueCountryReportResource».h"
#include "SWGPageResource«RevenueProductReportResource».h"
#include "SWGPageResource«RewardSetResource».h"
#include "SWGPageResource«RoleResource».h"
#include "SWGPageResource«SavedAddressResource».h"
#include "SWGPageResource«SimpleUserResource».h"
#include "SWGPageResource«SimpleWallet».h"
#include "SWGPageResource«StateTaxResource».h"
#include "SWGPageResource«StoreItemTemplateResource».h"
#include "SWGPageResource«StoreItem».h"
#include "SWGPageResource«SubscriptionResource».h"
#include "SWGPageResource«SubscriptionTemplateResource».h"
#include "SWGPageResource«TemplateResource».h"
#include "SWGPageResource«TransactionResource».h"
#include "SWGPageResource«UsageInfo».h"
#include "SWGPageResource«UserAchievementGroupResource».h"
#include "SWGPageResource«UserActionLog».h"
#include "SWGPageResource«UserBaseResource».h"
#include "SWGPageResource«UserInventoryResource».h"
#include "SWGPageResource«UserItemLogResource».h"
#include "SWGPageResource«UserLevelingResource».h"
#include "SWGPageResource«UserRelationshipResource».h"
#include "SWGPageResource«VendorResource».h"
#include "SWGPageResource«VideoRelationshipResource».h"
#include "SWGPageResource«VideoResource».h"
#include "SWGPageResource«WalletTotalResponse».h"
#include "SWGPageResource«WalletTransactionResource».h"
#include "SWGPageResource«string».h"
#include "SWGPayBySavedMethodRequest.h"
#include "SWGPaymentAuthorizationResource.h"
#include "SWGPaymentMethodResource.h"
#include "SWGPaymentMethodTypeResource.h"
#include "SWGPermission.h"
#include "SWGPermissionResource.h"
#include "SWGPollAnswerResource.h"
#include "SWGPollResource.h"
#include "SWGPollResponseResource.h"
#include "SWGPredicateOperation.h"
#include "SWGProperty.h"
#include "SWGPropertyDefinitionResource.h"
#include "SWGQuestionResource.h"
#include "SWGQuestionTemplateResource.h"
#include "SWGRawEmailResource.h"
#include "SWGRawSMSResource.h"
#include "SWGReactivateSubscriptionRequest.h"
#include "SWGRefundRequest.h"
#include "SWGRefundResource.h"
#include "SWGResult.h"
#include "SWGRevenueCountryReportResource.h"
#include "SWGRevenueProductReportResource.h"
#include "SWGRevenueReportResource.h"
#include "SWGRewardCurrencyResource.h"
#include "SWGRewardItemResource.h"
#include "SWGRewardSetResource.h"
#include "SWGRole.h"
#include "SWGRoleResource.h"
#include "SWGSampleCountriesResponse.h"
#include "SWGSavedAddressResource.h"
#include "SWGSchedule.h"
#include "SWGSearchReferenceMapping.h"
#include "SWGSelectedSettingResource.h"
#include "SWGSettingOption.h"
#include "SWGShippingItem.h"
#include "SWGSimpleReferenceResource«int».h"
#include "SWGSimpleReferenceResource«long».h"
#include "SWGSimpleReferenceResource«string».h"
#include "SWGSimpleUserResource.h"
#include "SWGSimpleWallet.h"
#include "SWGSku.h"
#include "SWGSkuRequest.h"
#include "SWGStateResource.h"
#include "SWGStateTaxResource.h"
#include "SWGStoreItem.h"
#include "SWGStoreItemTemplateResource.h"
#include "SWGStripeCreatePaymentMethod.h"
#include "SWGStripePaymentRequest.h"
#include "SWGSubscriptionCreditResource.h"
#include "SWGSubscriptionPlanResource.h"
#include "SWGSubscriptionResource.h"
#include "SWGSubscriptionTemplateResource.h"
#include "SWGTemplateEmailResource.h"
#include "SWGTemplateResource.h"
#include "SWGTemplateSMSResource.h"
#include "SWGTierResource.h"
#include "SWGTimezone.h"
#include "SWGTokenDetailsResource.h"
#include "SWGTransactionResource.h"
#include "SWGUsageInfo.h"
#include "SWGUser.h"
#include "SWGUserAchievementGroupResource.h"
#include "SWGUserAchievementResource.h"
#include "SWGUserActionLog.h"
#include "SWGUserActivityResultsResource.h"
#include "SWGUserBaseResource.h"
#include "SWGUserInventoryAddRequest.h"
#include "SWGUserInventoryResource.h"
#include "SWGUserItemLogResource.h"
#include "SWGUserLevelingResource.h"
#include "SWGUserRelationship.h"
#include "SWGUserRelationshipReferenceResource.h"
#include "SWGUserRelationshipResource.h"
#include "SWGUserResource.h"
#include "SWGUserTag.h"
#include "SWGVariableTypeResource.h"
#include "SWGVendorResource.h"
#include "SWGVersion.h"
#include "SWGVideo.h"
#include "SWGVideoContribution.h"
#include "SWGVideoRelationshipResource.h"
#include "SWGVideoResource.h"
#include "SWGVideoTag.h"
#include "SWGWalletAlterRequest.h"
#include "SWGWalletTotalResponse.h"
#include "SWGWalletTransactionResource.h"
#include "SWGXsollaPaymentRequest.h"

namespace Swagger {
  inline void* create(QString type) {
    if(QString("SWGAchievementDefinitionResource").compare(type) == 0) {
      return new SWGAchievementDefinitionResource();
    }
    if(QString("SWGAchievementProgressUpdateRequest").compare(type) == 0) {
      return new SWGAchievementProgressUpdateRequest();
    }
    if(QString("SWGActionResource").compare(type) == 0) {
      return new SWGActionResource();
    }
    if(QString("SWGActionVariableResource").compare(type) == 0) {
      return new SWGActionVariableResource();
    }
    if(QString("SWGActivityEntitlementResource").compare(type) == 0) {
      return new SWGActivityEntitlementResource();
    }
    if(QString("SWGActivityOccurrenceCreationFailure").compare(type) == 0) {
      return new SWGActivityOccurrenceCreationFailure();
    }
    if(QString("SWGActivityOccurrenceJoinResult").compare(type) == 0) {
      return new SWGActivityOccurrenceJoinResult();
    }
    if(QString("SWGActivityOccurrenceResource").compare(type) == 0) {
      return new SWGActivityOccurrenceResource();
    }
    if(QString("SWGActivityOccurrenceResults").compare(type) == 0) {
      return new SWGActivityOccurrenceResults();
    }
    if(QString("SWGActivityResource").compare(type) == 0) {
      return new SWGActivityResource();
    }
    if(QString("SWGActivityUserResource").compare(type) == 0) {
      return new SWGActivityUserResource();
    }
    if(QString("SWGAddressResource").compare(type) == 0) {
      return new SWGAddressResource();
    }
    if(QString("SWGAffiliate").compare(type) == 0) {
      return new SWGAffiliate();
    }
    if(QString("SWGAggregateCountResource").compare(type) == 0) {
      return new SWGAggregateCountResource();
    }
    if(QString("SWGAggregateInvoiceReportResource").compare(type) == 0) {
      return new SWGAggregateInvoiceReportResource();
    }
    if(QString("SWGAmazonS3Activity").compare(type) == 0) {
      return new SWGAmazonS3Activity();
    }
    if(QString("SWGAnswerResource").compare(type) == 0) {
      return new SWGAnswerResource();
    }
    if(QString("SWGApplyPaymentRequest").compare(type) == 0) {
      return new SWGApplyPaymentRequest();
    }
    if(QString("SWGArticleResource").compare(type) == 0) {
      return new SWGArticleResource();
    }
    if(QString("SWGArtist").compare(type) == 0) {
      return new SWGArtist();
    }
    if(QString("SWGArtistResource").compare(type) == 0) {
      return new SWGArtistResource();
    }
    if(QString("SWGAvailableSettingResource").compare(type) == 0) {
      return new SWGAvailableSettingResource();
    }
    if(QString("SWGBareActivityResource").compare(type) == 0) {
      return new SWGBareActivityResource();
    }
    if(QString("SWGBareChallengeActivityResource").compare(type) == 0) {
      return new SWGBareChallengeActivityResource();
    }
    if(QString("SWGBatch").compare(type) == 0) {
      return new SWGBatch();
    }
    if(QString("SWGBatchRequest").compare(type) == 0) {
      return new SWGBatchRequest();
    }
    if(QString("SWGBatchReturn").compare(type) == 0) {
      return new SWGBatchReturn();
    }
    if(QString("SWGBehavior").compare(type) == 0) {
      return new SWGBehavior();
    }
    if(QString("SWGBehaviorDefinitionResource").compare(type) == 0) {
      return new SWGBehaviorDefinitionResource();
    }
    if(QString("SWGBillingReport").compare(type) == 0) {
      return new SWGBillingReport();
    }
    if(QString("SWGBooleanResource").compare(type) == 0) {
      return new SWGBooleanResource();
    }
    if(QString("SWGBreCategoryResource").compare(type) == 0) {
      return new SWGBreCategoryResource();
    }
    if(QString("SWGBreEvent").compare(type) == 0) {
      return new SWGBreEvent();
    }
    if(QString("SWGBreEventLog").compare(type) == 0) {
      return new SWGBreEventLog();
    }
    if(QString("SWGBreGlobalResource").compare(type) == 0) {
      return new SWGBreGlobalResource();
    }
    if(QString("SWGBreGlobalScopeDefinition").compare(type) == 0) {
      return new SWGBreGlobalScopeDefinition();
    }
    if(QString("SWGBreRule").compare(type) == 0) {
      return new SWGBreRule();
    }
    if(QString("SWGBreRuleLog").compare(type) == 0) {
      return new SWGBreRuleLog();
    }
    if(QString("SWGBreTriggerParameterDefinition").compare(type) == 0) {
      return new SWGBreTriggerParameterDefinition();
    }
    if(QString("SWGBreTriggerResource").compare(type) == 0) {
      return new SWGBreTriggerResource();
    }
    if(QString("SWGBundleItem").compare(type) == 0) {
      return new SWGBundleItem();
    }
    if(QString("SWGBundledSku").compare(type) == 0) {
      return new SWGBundledSku();
    }
    if(QString("SWGCampaignResource").compare(type) == 0) {
      return new SWGCampaignResource();
    }
    if(QString("SWGCart").compare(type) == 0) {
      return new SWGCart();
    }
    if(QString("SWGCartItemRequest").compare(type) == 0) {
      return new SWGCartItemRequest();
    }
    if(QString("SWGCartLineItem").compare(type) == 0) {
      return new SWGCartLineItem();
    }
    if(QString("SWGCartShippableResponse").compare(type) == 0) {
      return new SWGCartShippableResponse();
    }
    if(QString("SWGCartShippingAddressRequest").compare(type) == 0) {
      return new SWGCartShippingAddressRequest();
    }
    if(QString("SWGCartShippingOption").compare(type) == 0) {
      return new SWGCartShippingOption();
    }
    if(QString("SWGCartSummary").compare(type) == 0) {
      return new SWGCartSummary();
    }
    if(QString("SWGCatalogSale").compare(type) == 0) {
      return new SWGCatalogSale();
    }
    if(QString("SWGCategoryResource").compare(type) == 0) {
      return new SWGCategoryResource();
    }
    if(QString("SWGChallengeActivityResource").compare(type) == 0) {
      return new SWGChallengeActivityResource();
    }
    if(QString("SWGChallengeEventParticipantResource").compare(type) == 0) {
      return new SWGChallengeEventParticipantResource();
    }
    if(QString("SWGChallengeEventResource").compare(type) == 0) {
      return new SWGChallengeEventResource();
    }
    if(QString("SWGChallengeResource").compare(type) == 0) {
      return new SWGChallengeResource();
    }
    if(QString("SWGClientResource").compare(type) == 0) {
      return new SWGClientResource();
    }
    if(QString("SWGCollection«Country»").compare(type) == 0) {
      return new SWGCollection«Country»();
    }
    if(QString("SWGCollection«VideoContribution»").compare(type) == 0) {
      return new SWGCollection«VideoContribution»();
    }
    if(QString("SWGCollection«string»").compare(type) == 0) {
      return new SWGCollection«string»();
    }
    if(QString("SWGCommentResource").compare(type) == 0) {
      return new SWGCommentResource();
    }
    if(QString("SWGCommentSearch").compare(type) == 0) {
      return new SWGCommentSearch();
    }
    if(QString("SWGConfig").compare(type) == 0) {
      return new SWGConfig();
    }
    if(QString("SWGContributionResource").compare(type) == 0) {
      return new SWGContributionResource();
    }
    if(QString("SWGCountry").compare(type) == 0) {
      return new SWGCountry();
    }
    if(QString("SWGCountryResource").compare(type) == 0) {
      return new SWGCountryResource();
    }
    if(QString("SWGCountryTaxResource").compare(type) == 0) {
      return new SWGCountryTaxResource();
    }
    if(QString("SWGCouponDefinition").compare(type) == 0) {
      return new SWGCouponDefinition();
    }
    if(QString("SWGCouponItem").compare(type) == 0) {
      return new SWGCouponItem();
    }
    if(QString("SWGCreateBillingAgreementRequest").compare(type) == 0) {
      return new SWGCreateBillingAgreementRequest();
    }
    if(QString("SWGCreatePayPalPaymentRequest").compare(type) == 0) {
      return new SWGCreatePayPalPaymentRequest();
    }
    if(QString("SWGCurrency").compare(type) == 0) {
      return new SWGCurrency();
    }
    if(QString("SWGCurrencyResource").compare(type) == 0) {
      return new SWGCurrencyResource();
    }
    if(QString("SWGDeltaResource").compare(type) == 0) {
      return new SWGDeltaResource();
    }
    if(QString("SWGDeviceResource").compare(type) == 0) {
      return new SWGDeviceResource();
    }
    if(QString("SWGDiscount").compare(type) == 0) {
      return new SWGDiscount();
    }
    if(QString("SWGDispositionCount").compare(type) == 0) {
      return new SWGDispositionCount();
    }
    if(QString("SWGDispositionResource").compare(type) == 0) {
      return new SWGDispositionResource();
    }
    if(QString("SWGEntitlementGrantRequest").compare(type) == 0) {
      return new SWGEntitlementGrantRequest();
    }
    if(QString("SWGEntitlementItem").compare(type) == 0) {
      return new SWGEntitlementItem();
    }
    if(QString("SWGErrorResource").compare(type) == 0) {
      return new SWGErrorResource();
    }
    if(QString("SWGExpression«object»").compare(type) == 0) {
      return new SWGExpression«object»();
    }
    if(QString("SWGFinalizeBillingAgreementRequest").compare(type) == 0) {
      return new SWGFinalizeBillingAgreementRequest();
    }
    if(QString("SWGFinalizePayPalPaymentRequest").compare(type) == 0) {
      return new SWGFinalizePayPalPaymentRequest();
    }
    if(QString("SWGFlagReportResource").compare(type) == 0) {
      return new SWGFlagReportResource();
    }
    if(QString("SWGFlagResource").compare(type) == 0) {
      return new SWGFlagResource();
    }
    if(QString("SWGForwardLog").compare(type) == 0) {
      return new SWGForwardLog();
    }
    if(QString("SWGFulfillmentType").compare(type) == 0) {
      return new SWGFulfillmentType();
    }
    if(QString("SWGGooglePaymentRequest").compare(type) == 0) {
      return new SWGGooglePaymentRequest();
    }
    if(QString("SWGGrantTypeResource").compare(type) == 0) {
      return new SWGGrantTypeResource();
    }
    if(QString("SWGGroup").compare(type) == 0) {
      return new SWGGroup();
    }
    if(QString("SWGGroupMember").compare(type) == 0) {
      return new SWGGroupMember();
    }
    if(QString("SWGGroupMemberResource").compare(type) == 0) {
      return new SWGGroupMemberResource();
    }
    if(QString("SWGGroupResource").compare(type) == 0) {
      return new SWGGroupResource();
    }
    if(QString("SWGImportJobOutputResource").compare(type) == 0) {
      return new SWGImportJobOutputResource();
    }
    if(QString("SWGImportJobResource").compare(type) == 0) {
      return new SWGImportJobResource();
    }
    if(QString("SWGInventorySubscriptionResource").compare(type) == 0) {
      return new SWGInventorySubscriptionResource();
    }
    if(QString("SWGInvoiceCreateRequest").compare(type) == 0) {
      return new SWGInvoiceCreateRequest();
    }
    if(QString("SWGInvoiceItemResource").compare(type) == 0) {
      return new SWGInvoiceItemResource();
    }
    if(QString("SWGInvoiceLogEntry").compare(type) == 0) {
      return new SWGInvoiceLogEntry();
    }
    if(QString("SWGInvoicePaymentStatusRequest").compare(type) == 0) {
      return new SWGInvoicePaymentStatusRequest();
    }
    if(QString("SWGInvoiceResource").compare(type) == 0) {
      return new SWGInvoiceResource();
    }
    if(QString("SWGItemBehaviorDefinitionResource").compare(type) == 0) {
      return new SWGItemBehaviorDefinitionResource();
    }
    if(QString("SWGItemTemplateResource").compare(type) == 0) {
      return new SWGItemTemplateResource();
    }
    if(QString("SWGKeyValuePair«string,string»").compare(type) == 0) {
      return new SWGKeyValuePair«string,string»();
    }
    if(QString("SWGLanguage").compare(type) == 0) {
      return new SWGLanguage();
    }
    if(QString("SWGLeaderboardEntryResource").compare(type) == 0) {
      return new SWGLeaderboardEntryResource();
    }
    if(QString("SWGLeaderboardResource").compare(type) == 0) {
      return new SWGLeaderboardResource();
    }
    if(QString("SWGLevelingResource").compare(type) == 0) {
      return new SWGLevelingResource();
    }
    if(QString("SWGLocalizer").compare(type) == 0) {
      return new SWGLocalizer();
    }
    if(QString("SWGLocationLogResource").compare(type) == 0) {
      return new SWGLocationLogResource();
    }
    if(QString("SWGLookupTypeResource").compare(type) == 0) {
      return new SWGLookupTypeResource();
    }
    if(QString("SWGMaintenance").compare(type) == 0) {
      return new SWGMaintenance();
    }
    if(QString("SWGMap«string,object»").compare(type) == 0) {
      return new SWGMap«string,object»();
    }
    if(QString("SWGMetricResource").compare(type) == 0) {
      return new SWGMetricResource();
    }
    if(QString("SWGNestedCategory").compare(type) == 0) {
      return new SWGNestedCategory();
    }
    if(QString("SWGNewPasswordRequest").compare(type) == 0) {
      return new SWGNewPasswordRequest();
    }
    if(QString("SWGOAuth2Resource").compare(type) == 0) {
      return new SWGOAuth2Resource();
    }
    if(QString("SWGOauthAccessTokenResource").compare(type) == 0) {
      return new SWGOauthAccessTokenResource();
    }
    if(QString("SWGOperator").compare(type) == 0) {
      return new SWGOperator();
    }
    if(QString("SWGOptimalPaymentRequest").compare(type) == 0) {
      return new SWGOptimalPaymentRequest();
    }
    if(QString("SWGOrder").compare(type) == 0) {
      return new SWGOrder();
    }
    if(QString("SWGPageResource«AchievementDefinitionResource»").compare(type) == 0) {
      return new SWGPageResource«AchievementDefinitionResource»();
    }
    if(QString("SWGPageResource«AggregateCountResource»").compare(type) == 0) {
      return new SWGPageResource«AggregateCountResource»();
    }
    if(QString("SWGPageResource«AggregateInvoiceReportResource»").compare(type) == 0) {
      return new SWGPageResource«AggregateInvoiceReportResource»();
    }
    if(QString("SWGPageResource«ArticleResource»").compare(type) == 0) {
      return new SWGPageResource«ArticleResource»();
    }
    if(QString("SWGPageResource«ArtistResource»").compare(type) == 0) {
      return new SWGPageResource«ArtistResource»();
    }
    if(QString("SWGPageResource«BareActivityResource»").compare(type) == 0) {
      return new SWGPageResource«BareActivityResource»();
    }
    if(QString("SWGPageResource«BareChallengeActivityResource»").compare(type) == 0) {
      return new SWGPageResource«BareChallengeActivityResource»();
    }
    if(QString("SWGPageResource«BillingReport»").compare(type) == 0) {
      return new SWGPageResource«BillingReport»();
    }
    if(QString("SWGPageResource«BreCategoryResource»").compare(type) == 0) {
      return new SWGPageResource«BreCategoryResource»();
    }
    if(QString("SWGPageResource«BreEventLog»").compare(type) == 0) {
      return new SWGPageResource«BreEventLog»();
    }
    if(QString("SWGPageResource«BreGlobalResource»").compare(type) == 0) {
      return new SWGPageResource«BreGlobalResource»();
    }
    if(QString("SWGPageResource«BreRule»").compare(type) == 0) {
      return new SWGPageResource«BreRule»();
    }
    if(QString("SWGPageResource«BreTriggerResource»").compare(type) == 0) {
      return new SWGPageResource«BreTriggerResource»();
    }
    if(QString("SWGPageResource«CampaignResource»").compare(type) == 0) {
      return new SWGPageResource«CampaignResource»();
    }
    if(QString("SWGPageResource«CartSummary»").compare(type) == 0) {
      return new SWGPageResource«CartSummary»();
    }
    if(QString("SWGPageResource«CatalogSale»").compare(type) == 0) {
      return new SWGPageResource«CatalogSale»();
    }
    if(QString("SWGPageResource«CategoryResource»").compare(type) == 0) {
      return new SWGPageResource«CategoryResource»();
    }
    if(QString("SWGPageResource«ChallengeEventParticipantResource»").compare(type) == 0) {
      return new SWGPageResource«ChallengeEventParticipantResource»();
    }
    if(QString("SWGPageResource«ChallengeEventResource»").compare(type) == 0) {
      return new SWGPageResource«ChallengeEventResource»();
    }
    if(QString("SWGPageResource«ChallengeResource»").compare(type) == 0) {
      return new SWGPageResource«ChallengeResource»();
    }
    if(QString("SWGPageResource«ClientResource»").compare(type) == 0) {
      return new SWGPageResource«ClientResource»();
    }
    if(QString("SWGPageResource«CommentResource»").compare(type) == 0) {
      return new SWGPageResource«CommentResource»();
    }
    if(QString("SWGPageResource«Config»").compare(type) == 0) {
      return new SWGPageResource«Config»();
    }
    if(QString("SWGPageResource«CountryTaxResource»").compare(type) == 0) {
      return new SWGPageResource«CountryTaxResource»();
    }
    if(QString("SWGPageResource«CurrencyResource»").compare(type) == 0) {
      return new SWGPageResource«CurrencyResource»();
    }
    if(QString("SWGPageResource«DeviceResource»").compare(type) == 0) {
      return new SWGPageResource«DeviceResource»();
    }
    if(QString("SWGPageResource«DispositionResource»").compare(type) == 0) {
      return new SWGPageResource«DispositionResource»();
    }
    if(QString("SWGPageResource«EntitlementItem»").compare(type) == 0) {
      return new SWGPageResource«EntitlementItem»();
    }
    if(QString("SWGPageResource«FlagReportResource»").compare(type) == 0) {
      return new SWGPageResource«FlagReportResource»();
    }
    if(QString("SWGPageResource«ForwardLog»").compare(type) == 0) {
      return new SWGPageResource«ForwardLog»();
    }
    if(QString("SWGPageResource«FulfillmentType»").compare(type) == 0) {
      return new SWGPageResource«FulfillmentType»();
    }
    if(QString("SWGPageResource«GroupMemberResource»").compare(type) == 0) {
      return new SWGPageResource«GroupMemberResource»();
    }
    if(QString("SWGPageResource«GroupResource»").compare(type) == 0) {
      return new SWGPageResource«GroupResource»();
    }
    if(QString("SWGPageResource«ImportJobResource»").compare(type) == 0) {
      return new SWGPageResource«ImportJobResource»();
    }
    if(QString("SWGPageResource«InvoiceLogEntry»").compare(type) == 0) {
      return new SWGPageResource«InvoiceLogEntry»();
    }
    if(QString("SWGPageResource«InvoiceResource»").compare(type) == 0) {
      return new SWGPageResource«InvoiceResource»();
    }
    if(QString("SWGPageResource«ItemTemplateResource»").compare(type) == 0) {
      return new SWGPageResource«ItemTemplateResource»();
    }
    if(QString("SWGPageResource«LevelingResource»").compare(type) == 0) {
      return new SWGPageResource«LevelingResource»();
    }
    if(QString("SWGPageResource«LocationLogResource»").compare(type) == 0) {
      return new SWGPageResource«LocationLogResource»();
    }
    if(QString("SWGPageResource«Map«string,object»»").compare(type) == 0) {
      return new SWGPageResource«Map«string,object»»();
    }
    if(QString("SWGPageResource«OauthAccessTokenResource»").compare(type) == 0) {
      return new SWGPageResource«OauthAccessTokenResource»();
    }
    if(QString("SWGPageResource«PermissionResource»").compare(type) == 0) {
      return new SWGPageResource«PermissionResource»();
    }
    if(QString("SWGPageResource«PollResource»").compare(type) == 0) {
      return new SWGPageResource«PollResource»();
    }
    if(QString("SWGPageResource«QuestionResource»").compare(type) == 0) {
      return new SWGPageResource«QuestionResource»();
    }
    if(QString("SWGPageResource«QuestionTemplateResource»").compare(type) == 0) {
      return new SWGPageResource«QuestionTemplateResource»();
    }
    if(QString("SWGPageResource«RevenueCountryReportResource»").compare(type) == 0) {
      return new SWGPageResource«RevenueCountryReportResource»();
    }
    if(QString("SWGPageResource«RevenueProductReportResource»").compare(type) == 0) {
      return new SWGPageResource«RevenueProductReportResource»();
    }
    if(QString("SWGPageResource«RewardSetResource»").compare(type) == 0) {
      return new SWGPageResource«RewardSetResource»();
    }
    if(QString("SWGPageResource«RoleResource»").compare(type) == 0) {
      return new SWGPageResource«RoleResource»();
    }
    if(QString("SWGPageResource«SavedAddressResource»").compare(type) == 0) {
      return new SWGPageResource«SavedAddressResource»();
    }
    if(QString("SWGPageResource«SimpleUserResource»").compare(type) == 0) {
      return new SWGPageResource«SimpleUserResource»();
    }
    if(QString("SWGPageResource«SimpleWallet»").compare(type) == 0) {
      return new SWGPageResource«SimpleWallet»();
    }
    if(QString("SWGPageResource«StateTaxResource»").compare(type) == 0) {
      return new SWGPageResource«StateTaxResource»();
    }
    if(QString("SWGPageResource«StoreItemTemplateResource»").compare(type) == 0) {
      return new SWGPageResource«StoreItemTemplateResource»();
    }
    if(QString("SWGPageResource«StoreItem»").compare(type) == 0) {
      return new SWGPageResource«StoreItem»();
    }
    if(QString("SWGPageResource«SubscriptionResource»").compare(type) == 0) {
      return new SWGPageResource«SubscriptionResource»();
    }
    if(QString("SWGPageResource«SubscriptionTemplateResource»").compare(type) == 0) {
      return new SWGPageResource«SubscriptionTemplateResource»();
    }
    if(QString("SWGPageResource«TemplateResource»").compare(type) == 0) {
      return new SWGPageResource«TemplateResource»();
    }
    if(QString("SWGPageResource«TransactionResource»").compare(type) == 0) {
      return new SWGPageResource«TransactionResource»();
    }
    if(QString("SWGPageResource«UsageInfo»").compare(type) == 0) {
      return new SWGPageResource«UsageInfo»();
    }
    if(QString("SWGPageResource«UserAchievementGroupResource»").compare(type) == 0) {
      return new SWGPageResource«UserAchievementGroupResource»();
    }
    if(QString("SWGPageResource«UserActionLog»").compare(type) == 0) {
      return new SWGPageResource«UserActionLog»();
    }
    if(QString("SWGPageResource«UserBaseResource»").compare(type) == 0) {
      return new SWGPageResource«UserBaseResource»();
    }
    if(QString("SWGPageResource«UserInventoryResource»").compare(type) == 0) {
      return new SWGPageResource«UserInventoryResource»();
    }
    if(QString("SWGPageResource«UserItemLogResource»").compare(type) == 0) {
      return new SWGPageResource«UserItemLogResource»();
    }
    if(QString("SWGPageResource«UserLevelingResource»").compare(type) == 0) {
      return new SWGPageResource«UserLevelingResource»();
    }
    if(QString("SWGPageResource«UserRelationshipResource»").compare(type) == 0) {
      return new SWGPageResource«UserRelationshipResource»();
    }
    if(QString("SWGPageResource«VendorResource»").compare(type) == 0) {
      return new SWGPageResource«VendorResource»();
    }
    if(QString("SWGPageResource«VideoRelationshipResource»").compare(type) == 0) {
      return new SWGPageResource«VideoRelationshipResource»();
    }
    if(QString("SWGPageResource«VideoResource»").compare(type) == 0) {
      return new SWGPageResource«VideoResource»();
    }
    if(QString("SWGPageResource«WalletTotalResponse»").compare(type) == 0) {
      return new SWGPageResource«WalletTotalResponse»();
    }
    if(QString("SWGPageResource«WalletTransactionResource»").compare(type) == 0) {
      return new SWGPageResource«WalletTransactionResource»();
    }
    if(QString("SWGPageResource«string»").compare(type) == 0) {
      return new SWGPageResource«string»();
    }
    if(QString("SWGPayBySavedMethodRequest").compare(type) == 0) {
      return new SWGPayBySavedMethodRequest();
    }
    if(QString("SWGPaymentAuthorizationResource").compare(type) == 0) {
      return new SWGPaymentAuthorizationResource();
    }
    if(QString("SWGPaymentMethodResource").compare(type) == 0) {
      return new SWGPaymentMethodResource();
    }
    if(QString("SWGPaymentMethodTypeResource").compare(type) == 0) {
      return new SWGPaymentMethodTypeResource();
    }
    if(QString("SWGPermission").compare(type) == 0) {
      return new SWGPermission();
    }
    if(QString("SWGPermissionResource").compare(type) == 0) {
      return new SWGPermissionResource();
    }
    if(QString("SWGPollAnswerResource").compare(type) == 0) {
      return new SWGPollAnswerResource();
    }
    if(QString("SWGPollResource").compare(type) == 0) {
      return new SWGPollResource();
    }
    if(QString("SWGPollResponseResource").compare(type) == 0) {
      return new SWGPollResponseResource();
    }
    if(QString("SWGPredicateOperation").compare(type) == 0) {
      return new SWGPredicateOperation();
    }
    if(QString("SWGProperty").compare(type) == 0) {
      return new SWGProperty();
    }
    if(QString("SWGPropertyDefinitionResource").compare(type) == 0) {
      return new SWGPropertyDefinitionResource();
    }
    if(QString("SWGQuestionResource").compare(type) == 0) {
      return new SWGQuestionResource();
    }
    if(QString("SWGQuestionTemplateResource").compare(type) == 0) {
      return new SWGQuestionTemplateResource();
    }
    if(QString("SWGRawEmailResource").compare(type) == 0) {
      return new SWGRawEmailResource();
    }
    if(QString("SWGRawSMSResource").compare(type) == 0) {
      return new SWGRawSMSResource();
    }
    if(QString("SWGReactivateSubscriptionRequest").compare(type) == 0) {
      return new SWGReactivateSubscriptionRequest();
    }
    if(QString("SWGRefundRequest").compare(type) == 0) {
      return new SWGRefundRequest();
    }
    if(QString("SWGRefundResource").compare(type) == 0) {
      return new SWGRefundResource();
    }
    if(QString("SWGResult").compare(type) == 0) {
      return new SWGResult();
    }
    if(QString("SWGRevenueCountryReportResource").compare(type) == 0) {
      return new SWGRevenueCountryReportResource();
    }
    if(QString("SWGRevenueProductReportResource").compare(type) == 0) {
      return new SWGRevenueProductReportResource();
    }
    if(QString("SWGRevenueReportResource").compare(type) == 0) {
      return new SWGRevenueReportResource();
    }
    if(QString("SWGRewardCurrencyResource").compare(type) == 0) {
      return new SWGRewardCurrencyResource();
    }
    if(QString("SWGRewardItemResource").compare(type) == 0) {
      return new SWGRewardItemResource();
    }
    if(QString("SWGRewardSetResource").compare(type) == 0) {
      return new SWGRewardSetResource();
    }
    if(QString("SWGRole").compare(type) == 0) {
      return new SWGRole();
    }
    if(QString("SWGRoleResource").compare(type) == 0) {
      return new SWGRoleResource();
    }
    if(QString("SWGSampleCountriesResponse").compare(type) == 0) {
      return new SWGSampleCountriesResponse();
    }
    if(QString("SWGSavedAddressResource").compare(type) == 0) {
      return new SWGSavedAddressResource();
    }
    if(QString("SWGSchedule").compare(type) == 0) {
      return new SWGSchedule();
    }
    if(QString("SWGSearchReferenceMapping").compare(type) == 0) {
      return new SWGSearchReferenceMapping();
    }
    if(QString("SWGSelectedSettingResource").compare(type) == 0) {
      return new SWGSelectedSettingResource();
    }
    if(QString("SWGSettingOption").compare(type) == 0) {
      return new SWGSettingOption();
    }
    if(QString("SWGShippingItem").compare(type) == 0) {
      return new SWGShippingItem();
    }
    if(QString("SWGSimpleReferenceResource«int»").compare(type) == 0) {
      return new SWGSimpleReferenceResource«int»();
    }
    if(QString("SWGSimpleReferenceResource«long»").compare(type) == 0) {
      return new SWGSimpleReferenceResource«long»();
    }
    if(QString("SWGSimpleReferenceResource«string»").compare(type) == 0) {
      return new SWGSimpleReferenceResource«string»();
    }
    if(QString("SWGSimpleUserResource").compare(type) == 0) {
      return new SWGSimpleUserResource();
    }
    if(QString("SWGSimpleWallet").compare(type) == 0) {
      return new SWGSimpleWallet();
    }
    if(QString("SWGSku").compare(type) == 0) {
      return new SWGSku();
    }
    if(QString("SWGSkuRequest").compare(type) == 0) {
      return new SWGSkuRequest();
    }
    if(QString("SWGStateResource").compare(type) == 0) {
      return new SWGStateResource();
    }
    if(QString("SWGStateTaxResource").compare(type) == 0) {
      return new SWGStateTaxResource();
    }
    if(QString("SWGStoreItem").compare(type) == 0) {
      return new SWGStoreItem();
    }
    if(QString("SWGStoreItemTemplateResource").compare(type) == 0) {
      return new SWGStoreItemTemplateResource();
    }
    if(QString("SWGStripeCreatePaymentMethod").compare(type) == 0) {
      return new SWGStripeCreatePaymentMethod();
    }
    if(QString("SWGStripePaymentRequest").compare(type) == 0) {
      return new SWGStripePaymentRequest();
    }
    if(QString("SWGSubscriptionCreditResource").compare(type) == 0) {
      return new SWGSubscriptionCreditResource();
    }
    if(QString("SWGSubscriptionPlanResource").compare(type) == 0) {
      return new SWGSubscriptionPlanResource();
    }
    if(QString("SWGSubscriptionResource").compare(type) == 0) {
      return new SWGSubscriptionResource();
    }
    if(QString("SWGSubscriptionTemplateResource").compare(type) == 0) {
      return new SWGSubscriptionTemplateResource();
    }
    if(QString("SWGTemplateEmailResource").compare(type) == 0) {
      return new SWGTemplateEmailResource();
    }
    if(QString("SWGTemplateResource").compare(type) == 0) {
      return new SWGTemplateResource();
    }
    if(QString("SWGTemplateSMSResource").compare(type) == 0) {
      return new SWGTemplateSMSResource();
    }
    if(QString("SWGTierResource").compare(type) == 0) {
      return new SWGTierResource();
    }
    if(QString("SWGTimezone").compare(type) == 0) {
      return new SWGTimezone();
    }
    if(QString("SWGTokenDetailsResource").compare(type) == 0) {
      return new SWGTokenDetailsResource();
    }
    if(QString("SWGTransactionResource").compare(type) == 0) {
      return new SWGTransactionResource();
    }
    if(QString("SWGUsageInfo").compare(type) == 0) {
      return new SWGUsageInfo();
    }
    if(QString("SWGUser").compare(type) == 0) {
      return new SWGUser();
    }
    if(QString("SWGUserAchievementGroupResource").compare(type) == 0) {
      return new SWGUserAchievementGroupResource();
    }
    if(QString("SWGUserAchievementResource").compare(type) == 0) {
      return new SWGUserAchievementResource();
    }
    if(QString("SWGUserActionLog").compare(type) == 0) {
      return new SWGUserActionLog();
    }
    if(QString("SWGUserActivityResultsResource").compare(type) == 0) {
      return new SWGUserActivityResultsResource();
    }
    if(QString("SWGUserBaseResource").compare(type) == 0) {
      return new SWGUserBaseResource();
    }
    if(QString("SWGUserInventoryAddRequest").compare(type) == 0) {
      return new SWGUserInventoryAddRequest();
    }
    if(QString("SWGUserInventoryResource").compare(type) == 0) {
      return new SWGUserInventoryResource();
    }
    if(QString("SWGUserItemLogResource").compare(type) == 0) {
      return new SWGUserItemLogResource();
    }
    if(QString("SWGUserLevelingResource").compare(type) == 0) {
      return new SWGUserLevelingResource();
    }
    if(QString("SWGUserRelationship").compare(type) == 0) {
      return new SWGUserRelationship();
    }
    if(QString("SWGUserRelationshipReferenceResource").compare(type) == 0) {
      return new SWGUserRelationshipReferenceResource();
    }
    if(QString("SWGUserRelationshipResource").compare(type) == 0) {
      return new SWGUserRelationshipResource();
    }
    if(QString("SWGUserResource").compare(type) == 0) {
      return new SWGUserResource();
    }
    if(QString("SWGUserTag").compare(type) == 0) {
      return new SWGUserTag();
    }
    if(QString("SWGVariableTypeResource").compare(type) == 0) {
      return new SWGVariableTypeResource();
    }
    if(QString("SWGVendorResource").compare(type) == 0) {
      return new SWGVendorResource();
    }
    if(QString("SWGVersion").compare(type) == 0) {
      return new SWGVersion();
    }
    if(QString("SWGVideo").compare(type) == 0) {
      return new SWGVideo();
    }
    if(QString("SWGVideoContribution").compare(type) == 0) {
      return new SWGVideoContribution();
    }
    if(QString("SWGVideoRelationshipResource").compare(type) == 0) {
      return new SWGVideoRelationshipResource();
    }
    if(QString("SWGVideoResource").compare(type) == 0) {
      return new SWGVideoResource();
    }
    if(QString("SWGVideoTag").compare(type) == 0) {
      return new SWGVideoTag();
    }
    if(QString("SWGWalletAlterRequest").compare(type) == 0) {
      return new SWGWalletAlterRequest();
    }
    if(QString("SWGWalletTotalResponse").compare(type) == 0) {
      return new SWGWalletTotalResponse();
    }
    if(QString("SWGWalletTransactionResource").compare(type) == 0) {
      return new SWGWalletTransactionResource();
    }
    if(QString("SWGXsollaPaymentRequest").compare(type) == 0) {
      return new SWGXsollaPaymentRequest();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != nullptr) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return nullptr;
  }
} /* namespace Swagger */

#endif /* ModelFactory_H_ */
