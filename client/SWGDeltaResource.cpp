/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGDeltaResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGDeltaResource::SWGDeltaResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGDeltaResource::SWGDeltaResource() {
    init();
}

SWGDeltaResource::~SWGDeltaResource() {
    this->cleanup();
}

void
SWGDeltaResource::init() {
    category_id = new QString("");
    media_type = new QString("");
    question_id = new QString("");
    state = new QString("");
    tags = new QList<QString*>();
    updated_date = 0L;
}

void
SWGDeltaResource::cleanup() {
    
    if(category_id != nullptr) {
        delete category_id;
    }

    if(media_type != nullptr) {
        delete media_type;
    }

    if(question_id != nullptr) {
        delete question_id;
    }

    if(state != nullptr) {
        delete state;
    }

    if(tags != nullptr) {
        QList<QString*>* arr = tags;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete tags;
    }

}

SWGDeltaResource*
SWGDeltaResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGDeltaResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&category_id, pJson["category_id"], "QString", "QString");
    ::Swagger::setValue(&media_type, pJson["media_type"], "QString", "QString");
    ::Swagger::setValue(&question_id, pJson["question_id"], "QString", "QString");
    ::Swagger::setValue(&state, pJson["state"], "QString", "QString");
    
    ::Swagger::setValue(&tags, pJson["tags"], "QList", "QString");
    
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
}

QString
SWGDeltaResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGDeltaResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("category_id"), category_id, obj, QString("QString"));

    toJsonValue(QString("media_type"), media_type, obj, QString("QString"));

    toJsonValue(QString("question_id"), question_id, obj, QString("QString"));

    toJsonValue(QString("state"), state, obj, QString("QString"));

    QJsonArray tagsJsonArray;
    toJsonArray((QList<void*>*)tags, &tagsJsonArray, "tags", "QString");
    obj->insert("tags", tagsJsonArray);

    obj->insert("updated_date", QJsonValue(updated_date));

    return obj;
}

QString*
SWGDeltaResource::getCategoryId() {
    return category_id;
}
void
SWGDeltaResource::setCategoryId(QString* category_id) {
    this->category_id = category_id;
}

QString*
SWGDeltaResource::getMediaType() {
    return media_type;
}
void
SWGDeltaResource::setMediaType(QString* media_type) {
    this->media_type = media_type;
}

QString*
SWGDeltaResource::getQuestionId() {
    return question_id;
}
void
SWGDeltaResource::setQuestionId(QString* question_id) {
    this->question_id = question_id;
}

QString*
SWGDeltaResource::getState() {
    return state;
}
void
SWGDeltaResource::setState(QString* state) {
    this->state = state;
}

QList<QString*>*
SWGDeltaResource::getTags() {
    return tags;
}
void
SWGDeltaResource::setTags(QList<QString*>* tags) {
    this->tags = tags;
}

qint64
SWGDeltaResource::getUpdatedDate() {
    return updated_date;
}
void
SWGDeltaResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}



} /* namespace Swagger */

