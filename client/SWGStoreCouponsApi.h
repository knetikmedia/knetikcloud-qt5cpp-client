/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGStoreCouponsApi_H_
#define _SWG_SWGStoreCouponsApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGCouponItem.h"
#include "SWGItemTemplateResource.h"
#include "SWGPageResource«ItemTemplateResource».h"
#include "SWGResult.h"

#include <QObject>

namespace Swagger {

class SWGStoreCouponsApi: public QObject {
    Q_OBJECT

public:
    SWGStoreCouponsApi();
    SWGStoreCouponsApi(QString host, QString basePath);
    ~SWGStoreCouponsApi();

    QString host;
    QString basePath;

    void createCouponItem(bool cascade, SWGCouponItem coupon_item);
    void createCouponTemplate(SWGItemTemplateResource coupon_template_resource);
    void deleteCouponItem(qint32 id);
    void deleteCouponTemplate(QString* id, QString* cascade);
    void getCouponItem(qint32 id);
    void getCouponTemplate(QString* id);
    void getCouponTemplates(qint32 size, qint32 page, QString* order);
    void updateCouponItem(qint32 id, bool cascade, SWGCouponItem coupon_item);
    void updateCouponTemplate(QString* id, SWGItemTemplateResource coupon_template_resource);
    
private:
    void createCouponItemCallback (HttpRequestWorker * worker);
    void createCouponTemplateCallback (HttpRequestWorker * worker);
    void deleteCouponItemCallback (HttpRequestWorker * worker);
    void deleteCouponTemplateCallback (HttpRequestWorker * worker);
    void getCouponItemCallback (HttpRequestWorker * worker);
    void getCouponTemplateCallback (HttpRequestWorker * worker);
    void getCouponTemplatesCallback (HttpRequestWorker * worker);
    void updateCouponItemCallback (HttpRequestWorker * worker);
    void updateCouponTemplateCallback (HttpRequestWorker * worker);
    
signals:
    void createCouponItemSignal(SWGCouponItem* summary);
    void createCouponTemplateSignal(SWGItemTemplateResource* summary);
    void deleteCouponItemSignal();
    void deleteCouponTemplateSignal();
    void getCouponItemSignal(SWGCouponItem* summary);
    void getCouponTemplateSignal(SWGItemTemplateResource* summary);
    void getCouponTemplatesSignal(SWGPageResource«ItemTemplateResource»* summary);
    void updateCouponItemSignal(SWGCouponItem* summary);
    void updateCouponTemplateSignal(SWGItemTemplateResource* summary);
    
};
}
#endif
