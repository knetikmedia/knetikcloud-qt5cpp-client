/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGSimpleWallet.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSimpleWallet::SWGSimpleWallet(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSimpleWallet::SWGSimpleWallet() {
    init();
}

SWGSimpleWallet::~SWGSimpleWallet() {
    this->cleanup();
}

void
SWGSimpleWallet::init() {
    balance = 0.0;
    code = new QString("");
    currency_name = new QString("");
    id = 0;
    user_id = 0;
}

void
SWGSimpleWallet::cleanup() {
    

    if(code != nullptr) {
        delete code;
    }

    if(currency_name != nullptr) {
        delete currency_name;
    }


}

SWGSimpleWallet*
SWGSimpleWallet::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSimpleWallet::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&balance, pJson["balance"], "double", "");
    ::Swagger::setValue(&code, pJson["code"], "QString", "QString");
    ::Swagger::setValue(&currency_name, pJson["currency_name"], "QString", "QString");
    ::Swagger::setValue(&id, pJson["id"], "qint32", "");
    ::Swagger::setValue(&user_id, pJson["user_id"], "qint32", "");
}

QString
SWGSimpleWallet::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSimpleWallet::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("balance", QJsonValue(balance));

    toJsonValue(QString("code"), code, obj, QString("QString"));

    toJsonValue(QString("currency_name"), currency_name, obj, QString("QString"));

    obj->insert("id", QJsonValue(id));

    obj->insert("user_id", QJsonValue(user_id));

    return obj;
}

double
SWGSimpleWallet::getBalance() {
    return balance;
}
void
SWGSimpleWallet::setBalance(double balance) {
    this->balance = balance;
}

QString*
SWGSimpleWallet::getCode() {
    return code;
}
void
SWGSimpleWallet::setCode(QString* code) {
    this->code = code;
}

QString*
SWGSimpleWallet::getCurrencyName() {
    return currency_name;
}
void
SWGSimpleWallet::setCurrencyName(QString* currency_name) {
    this->currency_name = currency_name;
}

qint32
SWGSimpleWallet::getId() {
    return id;
}
void
SWGSimpleWallet::setId(qint32 id) {
    this->id = id;
}

qint32
SWGSimpleWallet::getUserId() {
    return user_id;
}
void
SWGSimpleWallet::setUserId(qint32 user_id) {
    this->user_id = user_id;
}



} /* namespace Swagger */

