/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGMetricResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGMetricResource::SWGMetricResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGMetricResource::SWGMetricResource() {
    init();
}

SWGMetricResource::~SWGMetricResource() {
    this->cleanup();
}

void
SWGMetricResource::init() {
    activity_occurence_id = 0L;
    tags = new QList<QString*>();
    value = 0L;
}

void
SWGMetricResource::cleanup() {
    

    if(tags != nullptr) {
        QList<QString*>* arr = tags;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete tags;
    }

}

SWGMetricResource*
SWGMetricResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGMetricResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&activity_occurence_id, pJson["activity_occurence_id"], "qint64", "");
    
    ::Swagger::setValue(&tags, pJson["tags"], "QList", "QString");
    
    ::Swagger::setValue(&value, pJson["value"], "qint64", "");
}

QString
SWGMetricResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGMetricResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("activity_occurence_id", QJsonValue(activity_occurence_id));

    QJsonArray tagsJsonArray;
    toJsonArray((QList<void*>*)tags, &tagsJsonArray, "tags", "QString");
    obj->insert("tags", tagsJsonArray);

    obj->insert("value", QJsonValue(value));

    return obj;
}

qint64
SWGMetricResource::getActivityOccurenceId() {
    return activity_occurence_id;
}
void
SWGMetricResource::setActivityOccurenceId(qint64 activity_occurence_id) {
    this->activity_occurence_id = activity_occurence_id;
}

QList<QString*>*
SWGMetricResource::getTags() {
    return tags;
}
void
SWGMetricResource::setTags(QList<QString*>* tags) {
    this->tags = tags;
}

qint64
SWGMetricResource::getValue() {
    return value;
}
void
SWGMetricResource::setValue(qint64 value) {
    this->value = value;
}



} /* namespace Swagger */

