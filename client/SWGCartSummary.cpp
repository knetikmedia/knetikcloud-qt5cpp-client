/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCartSummary.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCartSummary::SWGCartSummary(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCartSummary::SWGCartSummary() {
    init();
}

SWGCartSummary::~SWGCartSummary() {
    this->cleanup();
}

void
SWGCartSummary::init() {
    created_date = 0L;
    currency_code = new QString("");
    grand_total = 0.0;
    id = new QString("");
    invoice_id = 0.0;
    items_in_cart = 0;
    status = new QString("");
    subtotal = 0.0;
}

void
SWGCartSummary::cleanup() {
    

    if(currency_code != nullptr) {
        delete currency_code;
    }


    if(id != nullptr) {
        delete id;
    }



    if(status != nullptr) {
        delete status;
    }

}

SWGCartSummary*
SWGCartSummary::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCartSummary::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&currency_code, pJson["currency_code"], "QString", "QString");
    ::Swagger::setValue(&grand_total, pJson["grand_total"], "double", "");
    ::Swagger::setValue(&id, pJson["id"], "QString", "QString");
    ::Swagger::setValue(&invoice_id, pJson["invoice_id"], "double", "");
    ::Swagger::setValue(&items_in_cart, pJson["items_in_cart"], "qint32", "");
    ::Swagger::setValue(&status, pJson["status"], "QString", "QString");
    ::Swagger::setValue(&subtotal, pJson["subtotal"], "double", "");
}

QString
SWGCartSummary::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCartSummary::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("created_date", QJsonValue(created_date));

    toJsonValue(QString("currency_code"), currency_code, obj, QString("QString"));

    obj->insert("grand_total", QJsonValue(grand_total));

    toJsonValue(QString("id"), id, obj, QString("QString"));

    obj->insert("invoice_id", QJsonValue(invoice_id));

    obj->insert("items_in_cart", QJsonValue(items_in_cart));

    toJsonValue(QString("status"), status, obj, QString("QString"));

    obj->insert("subtotal", QJsonValue(subtotal));

    return obj;
}

qint64
SWGCartSummary::getCreatedDate() {
    return created_date;
}
void
SWGCartSummary::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

QString*
SWGCartSummary::getCurrencyCode() {
    return currency_code;
}
void
SWGCartSummary::setCurrencyCode(QString* currency_code) {
    this->currency_code = currency_code;
}

double
SWGCartSummary::getGrandTotal() {
    return grand_total;
}
void
SWGCartSummary::setGrandTotal(double grand_total) {
    this->grand_total = grand_total;
}

QString*
SWGCartSummary::getId() {
    return id;
}
void
SWGCartSummary::setId(QString* id) {
    this->id = id;
}

double
SWGCartSummary::getInvoiceId() {
    return invoice_id;
}
void
SWGCartSummary::setInvoiceId(double invoice_id) {
    this->invoice_id = invoice_id;
}

qint32
SWGCartSummary::getItemsInCart() {
    return items_in_cart;
}
void
SWGCartSummary::setItemsInCart(qint32 items_in_cart) {
    this->items_in_cart = items_in_cart;
}

QString*
SWGCartSummary::getStatus() {
    return status;
}
void
SWGCartSummary::setStatus(QString* status) {
    this->status = status;
}

double
SWGCartSummary::getSubtotal() {
    return subtotal;
}
void
SWGCartSummary::setSubtotal(double subtotal) {
    this->subtotal = subtotal;
}



} /* namespace Swagger */

