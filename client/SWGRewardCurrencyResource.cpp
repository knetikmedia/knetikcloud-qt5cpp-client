/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGRewardCurrencyResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGRewardCurrencyResource::SWGRewardCurrencyResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGRewardCurrencyResource::SWGRewardCurrencyResource() {
    init();
}

SWGRewardCurrencyResource::~SWGRewardCurrencyResource() {
    this->cleanup();
}

void
SWGRewardCurrencyResource::init() {
    currency_code = new QString("");
    currency_name = new QString("");
    max_rank = 0;
    min_rank = 0;
    percent = false;
    value = 0.0;
}

void
SWGRewardCurrencyResource::cleanup() {
    
    if(currency_code != nullptr) {
        delete currency_code;
    }

    if(currency_name != nullptr) {
        delete currency_name;
    }




}

SWGRewardCurrencyResource*
SWGRewardCurrencyResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGRewardCurrencyResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&currency_code, pJson["currency_code"], "QString", "QString");
    ::Swagger::setValue(&currency_name, pJson["currency_name"], "QString", "QString");
    ::Swagger::setValue(&max_rank, pJson["max_rank"], "qint32", "");
    ::Swagger::setValue(&min_rank, pJson["min_rank"], "qint32", "");
    ::Swagger::setValue(&percent, pJson["percent"], "bool", "");
    ::Swagger::setValue(&value, pJson["value"], "double", "");
}

QString
SWGRewardCurrencyResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGRewardCurrencyResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("currency_code"), currency_code, obj, QString("QString"));

    toJsonValue(QString("currency_name"), currency_name, obj, QString("QString"));

    obj->insert("max_rank", QJsonValue(max_rank));

    obj->insert("min_rank", QJsonValue(min_rank));

    obj->insert("percent", QJsonValue(percent));

    obj->insert("value", QJsonValue(value));

    return obj;
}

QString*
SWGRewardCurrencyResource::getCurrencyCode() {
    return currency_code;
}
void
SWGRewardCurrencyResource::setCurrencyCode(QString* currency_code) {
    this->currency_code = currency_code;
}

QString*
SWGRewardCurrencyResource::getCurrencyName() {
    return currency_name;
}
void
SWGRewardCurrencyResource::setCurrencyName(QString* currency_name) {
    this->currency_name = currency_name;
}

qint32
SWGRewardCurrencyResource::getMaxRank() {
    return max_rank;
}
void
SWGRewardCurrencyResource::setMaxRank(qint32 max_rank) {
    this->max_rank = max_rank;
}

qint32
SWGRewardCurrencyResource::getMinRank() {
    return min_rank;
}
void
SWGRewardCurrencyResource::setMinRank(qint32 min_rank) {
    this->min_rank = min_rank;
}

bool
SWGRewardCurrencyResource::getPercent() {
    return percent;
}
void
SWGRewardCurrencyResource::setPercent(bool percent) {
    this->percent = percent;
}

double
SWGRewardCurrencyResource::getValue() {
    return value;
}
void
SWGRewardCurrencyResource::setValue(double value) {
    this->value = value;
}



} /* namespace Swagger */

