/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGFlagResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGFlagResource::SWGFlagResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGFlagResource::SWGFlagResource() {
    init();
}

SWGFlagResource::~SWGFlagResource() {
    this->cleanup();
}

void
SWGFlagResource::init() {
    context = new QString("");
    context_id = new QString("");
    created_date = 0L;
    id = 0L;
    reason = new QString("");
    updated_date = 0L;
    user = new SWGSimpleUserResource();
}

void
SWGFlagResource::cleanup() {
    
    if(context != nullptr) {
        delete context;
    }

    if(context_id != nullptr) {
        delete context_id;
    }



    if(reason != nullptr) {
        delete reason;
    }


    if(user != nullptr) {
        delete user;
    }
}

SWGFlagResource*
SWGFlagResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGFlagResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&context, pJson["context"], "QString", "QString");
    ::Swagger::setValue(&context_id, pJson["context_id"], "QString", "QString");
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&id, pJson["id"], "qint64", "");
    ::Swagger::setValue(&reason, pJson["reason"], "QString", "QString");
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
    ::Swagger::setValue(&user, pJson["user"], "SWGSimpleUserResource", "SWGSimpleUserResource");
}

QString
SWGFlagResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGFlagResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("context"), context, obj, QString("QString"));

    toJsonValue(QString("context_id"), context_id, obj, QString("QString"));

    obj->insert("created_date", QJsonValue(created_date));

    obj->insert("id", QJsonValue(id));

    toJsonValue(QString("reason"), reason, obj, QString("QString"));

    obj->insert("updated_date", QJsonValue(updated_date));

    toJsonValue(QString("user"), user, obj, QString("SWGSimpleUserResource"));

    return obj;
}

QString*
SWGFlagResource::getContext() {
    return context;
}
void
SWGFlagResource::setContext(QString* context) {
    this->context = context;
}

QString*
SWGFlagResource::getContextId() {
    return context_id;
}
void
SWGFlagResource::setContextId(QString* context_id) {
    this->context_id = context_id;
}

qint64
SWGFlagResource::getCreatedDate() {
    return created_date;
}
void
SWGFlagResource::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

qint64
SWGFlagResource::getId() {
    return id;
}
void
SWGFlagResource::setId(qint64 id) {
    this->id = id;
}

QString*
SWGFlagResource::getReason() {
    return reason;
}
void
SWGFlagResource::setReason(QString* reason) {
    this->reason = reason;
}

qint64
SWGFlagResource::getUpdatedDate() {
    return updated_date;
}
void
SWGFlagResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}

SWGSimpleUserResource*
SWGFlagResource::getUser() {
    return user;
}
void
SWGFlagResource::setUser(SWGSimpleUserResource* user) {
    this->user = user;
}



} /* namespace Swagger */

