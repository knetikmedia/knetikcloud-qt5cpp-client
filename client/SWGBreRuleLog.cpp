/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGBreRuleLog.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGBreRuleLog::SWGBreRuleLog(QString* json) {
    init();
    this->fromJson(*json);
}

SWGBreRuleLog::SWGBreRuleLog() {
    init();
}

SWGBreRuleLog::~SWGBreRuleLog() {
    this->cleanup();
}

void
SWGBreRuleLog::init() {
    ran = false;
    reason = new QString("");
    rule_end_date = 0L;
    rule_id = new QString("");
    rule_name = new QString("");
    rule_start_date = 0L;
}

void
SWGBreRuleLog::cleanup() {
    

    if(reason != nullptr) {
        delete reason;
    }


    if(rule_id != nullptr) {
        delete rule_id;
    }

    if(rule_name != nullptr) {
        delete rule_name;
    }

}

SWGBreRuleLog*
SWGBreRuleLog::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGBreRuleLog::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&ran, pJson["ran"], "bool", "");
    ::Swagger::setValue(&reason, pJson["reason"], "QString", "QString");
    ::Swagger::setValue(&rule_end_date, pJson["rule_end_date"], "qint64", "");
    ::Swagger::setValue(&rule_id, pJson["rule_id"], "QString", "QString");
    ::Swagger::setValue(&rule_name, pJson["rule_name"], "QString", "QString");
    ::Swagger::setValue(&rule_start_date, pJson["rule_start_date"], "qint64", "");
}

QString
SWGBreRuleLog::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGBreRuleLog::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("ran", QJsonValue(ran));

    toJsonValue(QString("reason"), reason, obj, QString("QString"));

    obj->insert("rule_end_date", QJsonValue(rule_end_date));

    toJsonValue(QString("rule_id"), rule_id, obj, QString("QString"));

    toJsonValue(QString("rule_name"), rule_name, obj, QString("QString"));

    obj->insert("rule_start_date", QJsonValue(rule_start_date));

    return obj;
}

bool
SWGBreRuleLog::getRan() {
    return ran;
}
void
SWGBreRuleLog::setRan(bool ran) {
    this->ran = ran;
}

QString*
SWGBreRuleLog::getReason() {
    return reason;
}
void
SWGBreRuleLog::setReason(QString* reason) {
    this->reason = reason;
}

qint64
SWGBreRuleLog::getRuleEndDate() {
    return rule_end_date;
}
void
SWGBreRuleLog::setRuleEndDate(qint64 rule_end_date) {
    this->rule_end_date = rule_end_date;
}

QString*
SWGBreRuleLog::getRuleId() {
    return rule_id;
}
void
SWGBreRuleLog::setRuleId(QString* rule_id) {
    this->rule_id = rule_id;
}

QString*
SWGBreRuleLog::getRuleName() {
    return rule_name;
}
void
SWGBreRuleLog::setRuleName(QString* rule_name) {
    this->rule_name = rule_name;
}

qint64
SWGBreRuleLog::getRuleStartDate() {
    return rule_start_date;
}
void
SWGBreRuleLog::setRuleStartDate(qint64 rule_start_date) {
    this->rule_start_date = rule_start_date;
}



} /* namespace Swagger */

