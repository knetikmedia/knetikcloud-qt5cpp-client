/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGReactivateSubscriptionRequest.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGReactivateSubscriptionRequest::SWGReactivateSubscriptionRequest(QString* json) {
    init();
    this->fromJson(*json);
}

SWGReactivateSubscriptionRequest::SWGReactivateSubscriptionRequest() {
    init();
}

SWGReactivateSubscriptionRequest::~SWGReactivateSubscriptionRequest() {
    this->cleanup();
}

void
SWGReactivateSubscriptionRequest::init() {
    inventory_id = 0;
    reactivation_fee = false;
}

void
SWGReactivateSubscriptionRequest::cleanup() {
    

}

SWGReactivateSubscriptionRequest*
SWGReactivateSubscriptionRequest::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGReactivateSubscriptionRequest::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&inventory_id, pJson["inventory_id"], "qint32", "");
    ::Swagger::setValue(&reactivation_fee, pJson["reactivation_fee"], "bool", "");
}

QString
SWGReactivateSubscriptionRequest::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGReactivateSubscriptionRequest::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("inventory_id", QJsonValue(inventory_id));

    obj->insert("reactivation_fee", QJsonValue(reactivation_fee));

    return obj;
}

qint32
SWGReactivateSubscriptionRequest::getInventoryId() {
    return inventory_id;
}
void
SWGReactivateSubscriptionRequest::setInventoryId(qint32 inventory_id) {
    this->inventory_id = inventory_id;
}

bool
SWGReactivateSubscriptionRequest::getReactivationFee() {
    return reactivation_fee;
}
void
SWGReactivateSubscriptionRequest::setReactivationFee(bool reactivation_fee) {
    this->reactivation_fee = reactivation_fee;
}



} /* namespace Swagger */

