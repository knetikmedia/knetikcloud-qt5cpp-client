/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGActionResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGActionResource::SWGActionResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGActionResource::SWGActionResource() {
    init();
}

SWGActionResource::~SWGActionResource() {
    this->cleanup();
}

void
SWGActionResource::init() {
    category = new QString("");
    description = new QString("");
    name = new QString("");
    variables = new QList<SWGActionVariableResource*>();
}

void
SWGActionResource::cleanup() {
    
    if(category != nullptr) {
        delete category;
    }

    if(description != nullptr) {
        delete description;
    }

    if(name != nullptr) {
        delete name;
    }

    if(variables != nullptr) {
        QList<SWGActionVariableResource*>* arr = variables;
        foreach(SWGActionVariableResource* o, *arr) {
            delete o;
        }
        delete variables;
    }
}

SWGActionResource*
SWGActionResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGActionResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&category, pJson["category"], "QString", "QString");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    
    ::Swagger::setValue(&variables, pJson["variables"], "QList", "SWGActionVariableResource");
    
}

QString
SWGActionResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGActionResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("category"), category, obj, QString("QString"));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    QJsonArray variablesJsonArray;
    toJsonArray((QList<void*>*)variables, &variablesJsonArray, "variables", "SWGActionVariableResource");
    obj->insert("variables", variablesJsonArray);

    return obj;
}

QString*
SWGActionResource::getCategory() {
    return category;
}
void
SWGActionResource::setCategory(QString* category) {
    this->category = category;
}

QString*
SWGActionResource::getDescription() {
    return description;
}
void
SWGActionResource::setDescription(QString* description) {
    this->description = description;
}

QString*
SWGActionResource::getName() {
    return name;
}
void
SWGActionResource::setName(QString* name) {
    this->name = name;
}

QList<SWGActionVariableResource*>*
SWGActionResource::getVariables() {
    return variables;
}
void
SWGActionResource::setVariables(QList<SWGActionVariableResource*>* variables) {
    this->variables = variables;
}



} /* namespace Swagger */

