/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCommentSearch.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCommentSearch::SWGCommentSearch(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCommentSearch::SWGCommentSearch() {
    init();
}

SWGCommentSearch::~SWGCommentSearch() {
    this->cleanup();
}

void
SWGCommentSearch::init() {
    content = new QString("");
    context = new QString("");
    context_id = 0;
    id = 0L;
    owner_id = 0;
    owner_username = new QString("");
}

void
SWGCommentSearch::cleanup() {
    
    if(content != nullptr) {
        delete content;
    }

    if(context != nullptr) {
        delete context;
    }




    if(owner_username != nullptr) {
        delete owner_username;
    }
}

SWGCommentSearch*
SWGCommentSearch::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCommentSearch::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&content, pJson["content"], "QString", "QString");
    ::Swagger::setValue(&context, pJson["context"], "QString", "QString");
    ::Swagger::setValue(&context_id, pJson["context_id"], "qint32", "");
    ::Swagger::setValue(&id, pJson["id"], "qint64", "");
    ::Swagger::setValue(&owner_id, pJson["owner_id"], "qint32", "");
    ::Swagger::setValue(&owner_username, pJson["owner_username"], "QString", "QString");
}

QString
SWGCommentSearch::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCommentSearch::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("content"), content, obj, QString("QString"));

    toJsonValue(QString("context"), context, obj, QString("QString"));

    obj->insert("context_id", QJsonValue(context_id));

    obj->insert("id", QJsonValue(id));

    obj->insert("owner_id", QJsonValue(owner_id));

    toJsonValue(QString("owner_username"), owner_username, obj, QString("QString"));

    return obj;
}

QString*
SWGCommentSearch::getContent() {
    return content;
}
void
SWGCommentSearch::setContent(QString* content) {
    this->content = content;
}

QString*
SWGCommentSearch::getContext() {
    return context;
}
void
SWGCommentSearch::setContext(QString* context) {
    this->context = context;
}

qint32
SWGCommentSearch::getContextId() {
    return context_id;
}
void
SWGCommentSearch::setContextId(qint32 context_id) {
    this->context_id = context_id;
}

qint64
SWGCommentSearch::getId() {
    return id;
}
void
SWGCommentSearch::setId(qint64 id) {
    this->id = id;
}

qint32
SWGCommentSearch::getOwnerId() {
    return owner_id;
}
void
SWGCommentSearch::setOwnerId(qint32 owner_id) {
    this->owner_id = owner_id;
}

QString*
SWGCommentSearch::getOwnerUsername() {
    return owner_username;
}
void
SWGCommentSearch::setOwnerUsername(QString* owner_username) {
    this->owner_username = owner_username;
}



} /* namespace Swagger */

