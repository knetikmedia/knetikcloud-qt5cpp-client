/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGLevelingResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGLevelingResource::SWGLevelingResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGLevelingResource::SWGLevelingResource() {
    init();
}

SWGLevelingResource::~SWGLevelingResource() {
    this->cleanup();
}

void
SWGLevelingResource::init() {
    additional_properties = new QMap<QString, SWGProperty>();
    created_date = 0L;
    description = new QString("");
    name = new QString("");
    tiers = new QList<SWGTierResource*>();
    updated_date = 0L;
}

void
SWGLevelingResource::cleanup() {
    
    if(additional_properties != nullptr) {
        QList<SWGProperty*>* arr = additional_properties;
        foreach(SWGProperty* o, *arr) {
            delete o;
        }
        delete additional_properties;
    }


    if(description != nullptr) {
        delete description;
    }

    if(name != nullptr) {
        delete name;
    }

    if(tiers != nullptr) {
        QList<SWGTierResource*>* arr = tiers;
        foreach(SWGTierResource* o, *arr) {
            delete o;
        }
        delete tiers;
    }

}

SWGLevelingResource*
SWGLevelingResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGLevelingResource::fromJsonObject(QJsonObject &pJson) {
    
    ::Swagger::setValue(&additional_properties, pJson["additional_properties"], "QMap", "SWGProperty");
    
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    
    ::Swagger::setValue(&tiers, pJson["tiers"], "QList", "SWGTierResource");
    
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
}

QString
SWGLevelingResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGLevelingResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    QJsonArray additional_propertiesJsonArray;
    toJsonArray((QList<void*>*)additional_properties, &additional_propertiesJsonArray, "additional_properties", "SWGProperty");
    obj->insert("additional_properties", additional_propertiesJsonArray);

    obj->insert("created_date", QJsonValue(created_date));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    QJsonArray tiersJsonArray;
    toJsonArray((QList<void*>*)tiers, &tiersJsonArray, "tiers", "SWGTierResource");
    obj->insert("tiers", tiersJsonArray);

    obj->insert("updated_date", QJsonValue(updated_date));

    return obj;
}

QMap<QString, SWGProperty*>*
SWGLevelingResource::getAdditionalProperties() {
    return additional_properties;
}
void
SWGLevelingResource::setAdditionalProperties(QMap<QString, SWGProperty*>* additional_properties) {
    this->additional_properties = additional_properties;
}

qint64
SWGLevelingResource::getCreatedDate() {
    return created_date;
}
void
SWGLevelingResource::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

QString*
SWGLevelingResource::getDescription() {
    return description;
}
void
SWGLevelingResource::setDescription(QString* description) {
    this->description = description;
}

QString*
SWGLevelingResource::getName() {
    return name;
}
void
SWGLevelingResource::setName(QString* name) {
    this->name = name;
}

QList<SWGTierResource*>*
SWGLevelingResource::getTiers() {
    return tiers;
}
void
SWGLevelingResource::setTiers(QList<SWGTierResource*>* tiers) {
    this->tiers = tiers;
}

qint64
SWGLevelingResource::getUpdatedDate() {
    return updated_date;
}
void
SWGLevelingResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}



} /* namespace Swagger */

