/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserLevelingResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGUserLevelingResource::SWGUserLevelingResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGUserLevelingResource::SWGUserLevelingResource() {
    init();
}

SWGUserLevelingResource::~SWGUserLevelingResource() {
    this->cleanup();
}

void
SWGUserLevelingResource::init() {
    last_tier_name = new QString("");
    last_tier_progress = 0;
    level_name = new QString("");
    next_tier_name = new QString("");
    next_tier_progress = 0;
    progress = 0;
    tier_names = new QList<QString*>();
    user_id = 0;
}

void
SWGUserLevelingResource::cleanup() {
    
    if(last_tier_name != nullptr) {
        delete last_tier_name;
    }


    if(level_name != nullptr) {
        delete level_name;
    }

    if(next_tier_name != nullptr) {
        delete next_tier_name;
    }



    if(tier_names != nullptr) {
        QList<QString*>* arr = tier_names;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete tier_names;
    }

}

SWGUserLevelingResource*
SWGUserLevelingResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserLevelingResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&last_tier_name, pJson["last_tier_name"], "QString", "QString");
    ::Swagger::setValue(&last_tier_progress, pJson["last_tier_progress"], "qint32", "");
    ::Swagger::setValue(&level_name, pJson["level_name"], "QString", "QString");
    ::Swagger::setValue(&next_tier_name, pJson["next_tier_name"], "QString", "QString");
    ::Swagger::setValue(&next_tier_progress, pJson["next_tier_progress"], "qint32", "");
    ::Swagger::setValue(&progress, pJson["progress"], "qint32", "");
    
    ::Swagger::setValue(&tier_names, pJson["tier_names"], "QList", "QString");
    
    ::Swagger::setValue(&user_id, pJson["user_id"], "qint32", "");
}

QString
SWGUserLevelingResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGUserLevelingResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("last_tier_name"), last_tier_name, obj, QString("QString"));

    obj->insert("last_tier_progress", QJsonValue(last_tier_progress));

    toJsonValue(QString("level_name"), level_name, obj, QString("QString"));

    toJsonValue(QString("next_tier_name"), next_tier_name, obj, QString("QString"));

    obj->insert("next_tier_progress", QJsonValue(next_tier_progress));

    obj->insert("progress", QJsonValue(progress));

    QJsonArray tier_namesJsonArray;
    toJsonArray((QList<void*>*)tier_names, &tier_namesJsonArray, "tier_names", "QString");
    obj->insert("tier_names", tier_namesJsonArray);

    obj->insert("user_id", QJsonValue(user_id));

    return obj;
}

QString*
SWGUserLevelingResource::getLastTierName() {
    return last_tier_name;
}
void
SWGUserLevelingResource::setLastTierName(QString* last_tier_name) {
    this->last_tier_name = last_tier_name;
}

qint32
SWGUserLevelingResource::getLastTierProgress() {
    return last_tier_progress;
}
void
SWGUserLevelingResource::setLastTierProgress(qint32 last_tier_progress) {
    this->last_tier_progress = last_tier_progress;
}

QString*
SWGUserLevelingResource::getLevelName() {
    return level_name;
}
void
SWGUserLevelingResource::setLevelName(QString* level_name) {
    this->level_name = level_name;
}

QString*
SWGUserLevelingResource::getNextTierName() {
    return next_tier_name;
}
void
SWGUserLevelingResource::setNextTierName(QString* next_tier_name) {
    this->next_tier_name = next_tier_name;
}

qint32
SWGUserLevelingResource::getNextTierProgress() {
    return next_tier_progress;
}
void
SWGUserLevelingResource::setNextTierProgress(qint32 next_tier_progress) {
    this->next_tier_progress = next_tier_progress;
}

qint32
SWGUserLevelingResource::getProgress() {
    return progress;
}
void
SWGUserLevelingResource::setProgress(qint32 progress) {
    this->progress = progress;
}

QList<QString*>*
SWGUserLevelingResource::getTierNames() {
    return tier_names;
}
void
SWGUserLevelingResource::setTierNames(QList<QString*>* tier_names) {
    this->tier_names = tier_names;
}

qint32
SWGUserLevelingResource::getUserId() {
    return user_id;
}
void
SWGUserLevelingResource::setUserId(qint32 user_id) {
    this->user_id = user_id;
}



} /* namespace Swagger */

