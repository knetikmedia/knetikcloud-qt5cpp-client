/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGRevenueReportResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGRevenueReportResource::SWGRevenueReportResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGRevenueReportResource::SWGRevenueReportResource() {
    init();
}

SWGRevenueReportResource::~SWGRevenueReportResource() {
    this->cleanup();
}

void
SWGRevenueReportResource::init() {
    customer_count = 0L;
    sale_count = 0L;
    sales_average = 0.0;
    sales_total = 0.0;
}

void
SWGRevenueReportResource::cleanup() {
    



}

SWGRevenueReportResource*
SWGRevenueReportResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGRevenueReportResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&customer_count, pJson["customer_count"], "qint64", "");
    ::Swagger::setValue(&sale_count, pJson["sale_count"], "qint64", "");
    ::Swagger::setValue(&sales_average, pJson["sales_average"], "double", "");
    ::Swagger::setValue(&sales_total, pJson["sales_total"], "double", "");
}

QString
SWGRevenueReportResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGRevenueReportResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("customer_count", QJsonValue(customer_count));

    obj->insert("sale_count", QJsonValue(sale_count));

    obj->insert("sales_average", QJsonValue(sales_average));

    obj->insert("sales_total", QJsonValue(sales_total));

    return obj;
}

qint64
SWGRevenueReportResource::getCustomerCount() {
    return customer_count;
}
void
SWGRevenueReportResource::setCustomerCount(qint64 customer_count) {
    this->customer_count = customer_count;
}

qint64
SWGRevenueReportResource::getSaleCount() {
    return sale_count;
}
void
SWGRevenueReportResource::setSaleCount(qint64 sale_count) {
    this->sale_count = sale_count;
}

double
SWGRevenueReportResource::getSalesAverage() {
    return sales_average;
}
void
SWGRevenueReportResource::setSalesAverage(double sales_average) {
    this->sales_average = sales_average;
}

double
SWGRevenueReportResource::getSalesTotal() {
    return sales_total;
}
void
SWGRevenueReportResource::setSalesTotal(double sales_total) {
    this->sales_total = sales_total;
}



} /* namespace Swagger */

