/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserInventoryResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGUserInventoryResource::SWGUserInventoryResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGUserInventoryResource::SWGUserInventoryResource() {
    init();
}

SWGUserInventoryResource::~SWGUserInventoryResource() {
    this->cleanup();
}

void
SWGUserInventoryResource::init() {
    behavior_data = NULL;
    created_date = 0L;
    expires = 0L;
    id = 0;
    invoice_id = 0;
    item_id = 0;
    item_name = new QString("");
    item_type_hint = new QString("");
    status = new QString("");
    updated_date = 0L;
    user = new SWGSimpleUserResource();
}

void
SWGUserInventoryResource::cleanup() {
    
    if(behavior_data != nullptr) {
        delete behavior_data;
    }






    if(item_name != nullptr) {
        delete item_name;
    }

    if(item_type_hint != nullptr) {
        delete item_type_hint;
    }

    if(status != nullptr) {
        delete status;
    }


    if(user != nullptr) {
        delete user;
    }
}

SWGUserInventoryResource*
SWGUserInventoryResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserInventoryResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&behavior_data, pJson["behavior_data"], "SWGObject", "SWGObject");
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&expires, pJson["expires"], "qint64", "");
    ::Swagger::setValue(&id, pJson["id"], "qint32", "");
    ::Swagger::setValue(&invoice_id, pJson["invoice_id"], "qint32", "");
    ::Swagger::setValue(&item_id, pJson["item_id"], "qint32", "");
    ::Swagger::setValue(&item_name, pJson["item_name"], "QString", "QString");
    ::Swagger::setValue(&item_type_hint, pJson["item_type_hint"], "QString", "QString");
    ::Swagger::setValue(&status, pJson["status"], "QString", "QString");
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
    ::Swagger::setValue(&user, pJson["user"], "SWGSimpleUserResource", "SWGSimpleUserResource");
}

QString
SWGUserInventoryResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGUserInventoryResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("behavior_data"), behavior_data, obj, QString("SWGObject"));

    obj->insert("created_date", QJsonValue(created_date));

    obj->insert("expires", QJsonValue(expires));

    obj->insert("id", QJsonValue(id));

    obj->insert("invoice_id", QJsonValue(invoice_id));

    obj->insert("item_id", QJsonValue(item_id));

    toJsonValue(QString("item_name"), item_name, obj, QString("QString"));

    toJsonValue(QString("item_type_hint"), item_type_hint, obj, QString("QString"));

    toJsonValue(QString("status"), status, obj, QString("QString"));

    obj->insert("updated_date", QJsonValue(updated_date));

    toJsonValue(QString("user"), user, obj, QString("SWGSimpleUserResource"));

    return obj;
}

SWGObject*
SWGUserInventoryResource::getBehaviorData() {
    return behavior_data;
}
void
SWGUserInventoryResource::setBehaviorData(SWGObject* behavior_data) {
    this->behavior_data = behavior_data;
}

qint64
SWGUserInventoryResource::getCreatedDate() {
    return created_date;
}
void
SWGUserInventoryResource::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

qint64
SWGUserInventoryResource::getExpires() {
    return expires;
}
void
SWGUserInventoryResource::setExpires(qint64 expires) {
    this->expires = expires;
}

qint32
SWGUserInventoryResource::getId() {
    return id;
}
void
SWGUserInventoryResource::setId(qint32 id) {
    this->id = id;
}

qint32
SWGUserInventoryResource::getInvoiceId() {
    return invoice_id;
}
void
SWGUserInventoryResource::setInvoiceId(qint32 invoice_id) {
    this->invoice_id = invoice_id;
}

qint32
SWGUserInventoryResource::getItemId() {
    return item_id;
}
void
SWGUserInventoryResource::setItemId(qint32 item_id) {
    this->item_id = item_id;
}

QString*
SWGUserInventoryResource::getItemName() {
    return item_name;
}
void
SWGUserInventoryResource::setItemName(QString* item_name) {
    this->item_name = item_name;
}

QString*
SWGUserInventoryResource::getItemTypeHint() {
    return item_type_hint;
}
void
SWGUserInventoryResource::setItemTypeHint(QString* item_type_hint) {
    this->item_type_hint = item_type_hint;
}

QString*
SWGUserInventoryResource::getStatus() {
    return status;
}
void
SWGUserInventoryResource::setStatus(QString* status) {
    this->status = status;
}

qint64
SWGUserInventoryResource::getUpdatedDate() {
    return updated_date;
}
void
SWGUserInventoryResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}

SWGSimpleUserResource*
SWGUserInventoryResource::getUser() {
    return user;
}
void
SWGUserInventoryResource::setUser(SWGSimpleUserResource* user) {
    this->user = user;
}



} /* namespace Swagger */

