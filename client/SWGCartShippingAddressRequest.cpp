/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCartShippingAddressRequest.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCartShippingAddressRequest::SWGCartShippingAddressRequest(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCartShippingAddressRequest::SWGCartShippingAddressRequest() {
    init();
}

SWGCartShippingAddressRequest::~SWGCartShippingAddressRequest() {
    this->cleanup();
}

void
SWGCartShippingAddressRequest::init() {
    city = new QString("");
    country_code_iso3 = new QString("");
    email = new QString("");
    first_name = new QString("");
    last_name = new QString("");
    name_prefix = new QString("");
    order_notes = new QString("");
    phone_number = new QString("");
    postal_state_code = new QString("");
    shipping_address_line1 = new QString("");
    shipping_address_line2 = new QString("");
    zip = new QString("");
}

void
SWGCartShippingAddressRequest::cleanup() {
    
    if(city != nullptr) {
        delete city;
    }

    if(country_code_iso3 != nullptr) {
        delete country_code_iso3;
    }

    if(email != nullptr) {
        delete email;
    }

    if(first_name != nullptr) {
        delete first_name;
    }

    if(last_name != nullptr) {
        delete last_name;
    }

    if(name_prefix != nullptr) {
        delete name_prefix;
    }

    if(order_notes != nullptr) {
        delete order_notes;
    }

    if(phone_number != nullptr) {
        delete phone_number;
    }

    if(postal_state_code != nullptr) {
        delete postal_state_code;
    }

    if(shipping_address_line1 != nullptr) {
        delete shipping_address_line1;
    }

    if(shipping_address_line2 != nullptr) {
        delete shipping_address_line2;
    }

    if(zip != nullptr) {
        delete zip;
    }
}

SWGCartShippingAddressRequest*
SWGCartShippingAddressRequest::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCartShippingAddressRequest::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&city, pJson["city"], "QString", "QString");
    ::Swagger::setValue(&country_code_iso3, pJson["country_code_iso3"], "QString", "QString");
    ::Swagger::setValue(&email, pJson["email"], "QString", "QString");
    ::Swagger::setValue(&first_name, pJson["first_name"], "QString", "QString");
    ::Swagger::setValue(&last_name, pJson["last_name"], "QString", "QString");
    ::Swagger::setValue(&name_prefix, pJson["name_prefix"], "QString", "QString");
    ::Swagger::setValue(&order_notes, pJson["order_notes"], "QString", "QString");
    ::Swagger::setValue(&phone_number, pJson["phone_number"], "QString", "QString");
    ::Swagger::setValue(&postal_state_code, pJson["postal_state_code"], "QString", "QString");
    ::Swagger::setValue(&shipping_address_line1, pJson["shipping_address_line1"], "QString", "QString");
    ::Swagger::setValue(&shipping_address_line2, pJson["shipping_address_line2"], "QString", "QString");
    ::Swagger::setValue(&zip, pJson["zip"], "QString", "QString");
}

QString
SWGCartShippingAddressRequest::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCartShippingAddressRequest::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("city"), city, obj, QString("QString"));

    toJsonValue(QString("country_code_iso3"), country_code_iso3, obj, QString("QString"));

    toJsonValue(QString("email"), email, obj, QString("QString"));

    toJsonValue(QString("first_name"), first_name, obj, QString("QString"));

    toJsonValue(QString("last_name"), last_name, obj, QString("QString"));

    toJsonValue(QString("name_prefix"), name_prefix, obj, QString("QString"));

    toJsonValue(QString("order_notes"), order_notes, obj, QString("QString"));

    toJsonValue(QString("phone_number"), phone_number, obj, QString("QString"));

    toJsonValue(QString("postal_state_code"), postal_state_code, obj, QString("QString"));

    toJsonValue(QString("shipping_address_line1"), shipping_address_line1, obj, QString("QString"));

    toJsonValue(QString("shipping_address_line2"), shipping_address_line2, obj, QString("QString"));

    toJsonValue(QString("zip"), zip, obj, QString("QString"));

    return obj;
}

QString*
SWGCartShippingAddressRequest::getCity() {
    return city;
}
void
SWGCartShippingAddressRequest::setCity(QString* city) {
    this->city = city;
}

QString*
SWGCartShippingAddressRequest::getCountryCodeIso3() {
    return country_code_iso3;
}
void
SWGCartShippingAddressRequest::setCountryCodeIso3(QString* country_code_iso3) {
    this->country_code_iso3 = country_code_iso3;
}

QString*
SWGCartShippingAddressRequest::getEmail() {
    return email;
}
void
SWGCartShippingAddressRequest::setEmail(QString* email) {
    this->email = email;
}

QString*
SWGCartShippingAddressRequest::getFirstName() {
    return first_name;
}
void
SWGCartShippingAddressRequest::setFirstName(QString* first_name) {
    this->first_name = first_name;
}

QString*
SWGCartShippingAddressRequest::getLastName() {
    return last_name;
}
void
SWGCartShippingAddressRequest::setLastName(QString* last_name) {
    this->last_name = last_name;
}

QString*
SWGCartShippingAddressRequest::getNamePrefix() {
    return name_prefix;
}
void
SWGCartShippingAddressRequest::setNamePrefix(QString* name_prefix) {
    this->name_prefix = name_prefix;
}

QString*
SWGCartShippingAddressRequest::getOrderNotes() {
    return order_notes;
}
void
SWGCartShippingAddressRequest::setOrderNotes(QString* order_notes) {
    this->order_notes = order_notes;
}

QString*
SWGCartShippingAddressRequest::getPhoneNumber() {
    return phone_number;
}
void
SWGCartShippingAddressRequest::setPhoneNumber(QString* phone_number) {
    this->phone_number = phone_number;
}

QString*
SWGCartShippingAddressRequest::getPostalStateCode() {
    return postal_state_code;
}
void
SWGCartShippingAddressRequest::setPostalStateCode(QString* postal_state_code) {
    this->postal_state_code = postal_state_code;
}

QString*
SWGCartShippingAddressRequest::getShippingAddressLine1() {
    return shipping_address_line1;
}
void
SWGCartShippingAddressRequest::setShippingAddressLine1(QString* shipping_address_line1) {
    this->shipping_address_line1 = shipping_address_line1;
}

QString*
SWGCartShippingAddressRequest::getShippingAddressLine2() {
    return shipping_address_line2;
}
void
SWGCartShippingAddressRequest::setShippingAddressLine2(QString* shipping_address_line2) {
    this->shipping_address_line2 = shipping_address_line2;
}

QString*
SWGCartShippingAddressRequest::getZip() {
    return zip;
}
void
SWGCartShippingAddressRequest::setZip(QString* zip) {
    this->zip = zip;
}



} /* namespace Swagger */

