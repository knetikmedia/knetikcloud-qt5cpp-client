/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGItemTemplateResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGItemTemplateResource::SWGItemTemplateResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGItemTemplateResource::SWGItemTemplateResource() {
    init();
}

SWGItemTemplateResource::~SWGItemTemplateResource() {
    this->cleanup();
}

void
SWGItemTemplateResource::init() {
    behaviors = new QList<SWGItemBehaviorDefinitionResource*>();
    created_date = 0L;
    id = new QString("");
    name = new QString("");
    properties = new QList<SWGPropertyDefinitionResource*>();
    updated_date = 0L;
}

void
SWGItemTemplateResource::cleanup() {
    
    if(behaviors != nullptr) {
        QList<SWGItemBehaviorDefinitionResource*>* arr = behaviors;
        foreach(SWGItemBehaviorDefinitionResource* o, *arr) {
            delete o;
        }
        delete behaviors;
    }


    if(id != nullptr) {
        delete id;
    }

    if(name != nullptr) {
        delete name;
    }

    if(properties != nullptr) {
        QList<SWGPropertyDefinitionResource*>* arr = properties;
        foreach(SWGPropertyDefinitionResource* o, *arr) {
            delete o;
        }
        delete properties;
    }

}

SWGItemTemplateResource*
SWGItemTemplateResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGItemTemplateResource::fromJsonObject(QJsonObject &pJson) {
    
    ::Swagger::setValue(&behaviors, pJson["behaviors"], "QList", "SWGItemBehaviorDefinitionResource");
    
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&id, pJson["id"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    
    ::Swagger::setValue(&properties, pJson["properties"], "QList", "SWGPropertyDefinitionResource");
    
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
}

QString
SWGItemTemplateResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGItemTemplateResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    QJsonArray behaviorsJsonArray;
    toJsonArray((QList<void*>*)behaviors, &behaviorsJsonArray, "behaviors", "SWGItemBehaviorDefinitionResource");
    obj->insert("behaviors", behaviorsJsonArray);

    obj->insert("created_date", QJsonValue(created_date));

    toJsonValue(QString("id"), id, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    QJsonArray propertiesJsonArray;
    toJsonArray((QList<void*>*)properties, &propertiesJsonArray, "properties", "SWGPropertyDefinitionResource");
    obj->insert("properties", propertiesJsonArray);

    obj->insert("updated_date", QJsonValue(updated_date));

    return obj;
}

QList<SWGItemBehaviorDefinitionResource*>*
SWGItemTemplateResource::getBehaviors() {
    return behaviors;
}
void
SWGItemTemplateResource::setBehaviors(QList<SWGItemBehaviorDefinitionResource*>* behaviors) {
    this->behaviors = behaviors;
}

qint64
SWGItemTemplateResource::getCreatedDate() {
    return created_date;
}
void
SWGItemTemplateResource::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

QString*
SWGItemTemplateResource::getId() {
    return id;
}
void
SWGItemTemplateResource::setId(QString* id) {
    this->id = id;
}

QString*
SWGItemTemplateResource::getName() {
    return name;
}
void
SWGItemTemplateResource::setName(QString* name) {
    this->name = name;
}

QList<SWGPropertyDefinitionResource*>*
SWGItemTemplateResource::getProperties() {
    return properties;
}
void
SWGItemTemplateResource::setProperties(QList<SWGPropertyDefinitionResource*>* properties) {
    this->properties = properties;
}

qint64
SWGItemTemplateResource::getUpdatedDate() {
    return updated_date;
}
void
SWGItemTemplateResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}



} /* namespace Swagger */

