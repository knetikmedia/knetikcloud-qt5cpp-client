/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCartLineItem.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCartLineItem::SWGCartLineItem(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCartLineItem::SWGCartLineItem() {
    init();
}

SWGCartLineItem::~SWGCartLineItem() {
    this->cleanup();
}

void
SWGCartLineItem::init() {
    currency_code = new QString("");
    description = new QString("");
    discount = new SWGDiscount();
    line_total = 0.0;
    name = new QString("");
    original_line_total = 0.0;
    original_unit_price = 0.0;
    qty = 0;
    sale_name = new QString("");
    sku = new QString("");
    sku_description = new QString("");
    store_item_id = 0;
    tags = new QList<QString*>();
    thumb_url = new QString("");
    unit_price = 0.0;
    vendor_id = 0;
    vendor_name = new QString("");
}

void
SWGCartLineItem::cleanup() {
    
    if(currency_code != nullptr) {
        delete currency_code;
    }

    if(description != nullptr) {
        delete description;
    }

    if(discount != nullptr) {
        delete discount;
    }


    if(name != nullptr) {
        delete name;
    }




    if(sale_name != nullptr) {
        delete sale_name;
    }

    if(sku != nullptr) {
        delete sku;
    }

    if(sku_description != nullptr) {
        delete sku_description;
    }


    if(tags != nullptr) {
        QList<QString*>* arr = tags;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete tags;
    }

    if(thumb_url != nullptr) {
        delete thumb_url;
    }



    if(vendor_name != nullptr) {
        delete vendor_name;
    }
}

SWGCartLineItem*
SWGCartLineItem::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCartLineItem::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&currency_code, pJson["currency_code"], "QString", "QString");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&discount, pJson["discount"], "SWGDiscount", "SWGDiscount");
    ::Swagger::setValue(&line_total, pJson["line_total"], "double", "");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&original_line_total, pJson["original_line_total"], "double", "");
    ::Swagger::setValue(&original_unit_price, pJson["original_unit_price"], "double", "");
    ::Swagger::setValue(&qty, pJson["qty"], "qint32", "");
    ::Swagger::setValue(&sale_name, pJson["sale_name"], "QString", "QString");
    ::Swagger::setValue(&sku, pJson["sku"], "QString", "QString");
    ::Swagger::setValue(&sku_description, pJson["sku_description"], "QString", "QString");
    ::Swagger::setValue(&store_item_id, pJson["store_item_id"], "qint32", "");
    
    ::Swagger::setValue(&tags, pJson["tags"], "QList", "QString");
    
    ::Swagger::setValue(&thumb_url, pJson["thumb_url"], "QString", "QString");
    ::Swagger::setValue(&unit_price, pJson["unit_price"], "double", "");
    ::Swagger::setValue(&vendor_id, pJson["vendor_id"], "qint32", "");
    ::Swagger::setValue(&vendor_name, pJson["vendor_name"], "QString", "QString");
}

QString
SWGCartLineItem::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCartLineItem::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("currency_code"), currency_code, obj, QString("QString"));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("discount"), discount, obj, QString("SWGDiscount"));

    obj->insert("line_total", QJsonValue(line_total));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    obj->insert("original_line_total", QJsonValue(original_line_total));

    obj->insert("original_unit_price", QJsonValue(original_unit_price));

    obj->insert("qty", QJsonValue(qty));

    toJsonValue(QString("sale_name"), sale_name, obj, QString("QString"));

    toJsonValue(QString("sku"), sku, obj, QString("QString"));

    toJsonValue(QString("sku_description"), sku_description, obj, QString("QString"));

    obj->insert("store_item_id", QJsonValue(store_item_id));

    QJsonArray tagsJsonArray;
    toJsonArray((QList<void*>*)tags, &tagsJsonArray, "tags", "QString");
    obj->insert("tags", tagsJsonArray);

    toJsonValue(QString("thumb_url"), thumb_url, obj, QString("QString"));

    obj->insert("unit_price", QJsonValue(unit_price));

    obj->insert("vendor_id", QJsonValue(vendor_id));

    toJsonValue(QString("vendor_name"), vendor_name, obj, QString("QString"));

    return obj;
}

QString*
SWGCartLineItem::getCurrencyCode() {
    return currency_code;
}
void
SWGCartLineItem::setCurrencyCode(QString* currency_code) {
    this->currency_code = currency_code;
}

QString*
SWGCartLineItem::getDescription() {
    return description;
}
void
SWGCartLineItem::setDescription(QString* description) {
    this->description = description;
}

SWGDiscount*
SWGCartLineItem::getDiscount() {
    return discount;
}
void
SWGCartLineItem::setDiscount(SWGDiscount* discount) {
    this->discount = discount;
}

double
SWGCartLineItem::getLineTotal() {
    return line_total;
}
void
SWGCartLineItem::setLineTotal(double line_total) {
    this->line_total = line_total;
}

QString*
SWGCartLineItem::getName() {
    return name;
}
void
SWGCartLineItem::setName(QString* name) {
    this->name = name;
}

double
SWGCartLineItem::getOriginalLineTotal() {
    return original_line_total;
}
void
SWGCartLineItem::setOriginalLineTotal(double original_line_total) {
    this->original_line_total = original_line_total;
}

double
SWGCartLineItem::getOriginalUnitPrice() {
    return original_unit_price;
}
void
SWGCartLineItem::setOriginalUnitPrice(double original_unit_price) {
    this->original_unit_price = original_unit_price;
}

qint32
SWGCartLineItem::getQty() {
    return qty;
}
void
SWGCartLineItem::setQty(qint32 qty) {
    this->qty = qty;
}

QString*
SWGCartLineItem::getSaleName() {
    return sale_name;
}
void
SWGCartLineItem::setSaleName(QString* sale_name) {
    this->sale_name = sale_name;
}

QString*
SWGCartLineItem::getSku() {
    return sku;
}
void
SWGCartLineItem::setSku(QString* sku) {
    this->sku = sku;
}

QString*
SWGCartLineItem::getSkuDescription() {
    return sku_description;
}
void
SWGCartLineItem::setSkuDescription(QString* sku_description) {
    this->sku_description = sku_description;
}

qint32
SWGCartLineItem::getStoreItemId() {
    return store_item_id;
}
void
SWGCartLineItem::setStoreItemId(qint32 store_item_id) {
    this->store_item_id = store_item_id;
}

QList<QString*>*
SWGCartLineItem::getTags() {
    return tags;
}
void
SWGCartLineItem::setTags(QList<QString*>* tags) {
    this->tags = tags;
}

QString*
SWGCartLineItem::getThumbUrl() {
    return thumb_url;
}
void
SWGCartLineItem::setThumbUrl(QString* thumb_url) {
    this->thumb_url = thumb_url;
}

double
SWGCartLineItem::getUnitPrice() {
    return unit_price;
}
void
SWGCartLineItem::setUnitPrice(double unit_price) {
    this->unit_price = unit_price;
}

qint32
SWGCartLineItem::getVendorId() {
    return vendor_id;
}
void
SWGCartLineItem::setVendorId(qint32 vendor_id) {
    this->vendor_id = vendor_id;
}

QString*
SWGCartLineItem::getVendorName() {
    return vendor_name;
}
void
SWGCartLineItem::setVendorName(QString* vendor_name) {
    this->vendor_name = vendor_name;
}



} /* namespace Swagger */

