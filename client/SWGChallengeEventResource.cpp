/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGChallengeEventResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGChallengeEventResource::SWGChallengeEventResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGChallengeEventResource::SWGChallengeEventResource() {
    init();
}

SWGChallengeEventResource::~SWGChallengeEventResource() {
    this->cleanup();
}

void
SWGChallengeEventResource::init() {
    challenge_id = 0L;
    end_date = 0L;
    id = 0L;
    reward_status = new QString("");
    start_date = 0L;
}

void
SWGChallengeEventResource::cleanup() {
    



    if(reward_status != nullptr) {
        delete reward_status;
    }

}

SWGChallengeEventResource*
SWGChallengeEventResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGChallengeEventResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&challenge_id, pJson["challenge_id"], "qint64", "");
    ::Swagger::setValue(&end_date, pJson["end_date"], "qint64", "");
    ::Swagger::setValue(&id, pJson["id"], "qint64", "");
    ::Swagger::setValue(&reward_status, pJson["reward_status"], "QString", "QString");
    ::Swagger::setValue(&start_date, pJson["start_date"], "qint64", "");
}

QString
SWGChallengeEventResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGChallengeEventResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("challenge_id", QJsonValue(challenge_id));

    obj->insert("end_date", QJsonValue(end_date));

    obj->insert("id", QJsonValue(id));

    toJsonValue(QString("reward_status"), reward_status, obj, QString("QString"));

    obj->insert("start_date", QJsonValue(start_date));

    return obj;
}

qint64
SWGChallengeEventResource::getChallengeId() {
    return challenge_id;
}
void
SWGChallengeEventResource::setChallengeId(qint64 challenge_id) {
    this->challenge_id = challenge_id;
}

qint64
SWGChallengeEventResource::getEndDate() {
    return end_date;
}
void
SWGChallengeEventResource::setEndDate(qint64 end_date) {
    this->end_date = end_date;
}

qint64
SWGChallengeEventResource::getId() {
    return id;
}
void
SWGChallengeEventResource::setId(qint64 id) {
    this->id = id;
}

QString*
SWGChallengeEventResource::getRewardStatus() {
    return reward_status;
}
void
SWGChallengeEventResource::setRewardStatus(QString* reward_status) {
    this->reward_status = reward_status;
}

qint64
SWGChallengeEventResource::getStartDate() {
    return start_date;
}
void
SWGChallengeEventResource::setStartDate(qint64 start_date) {
    this->start_date = start_date;
}



} /* namespace Swagger */

