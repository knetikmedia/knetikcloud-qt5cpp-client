/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCurrencyResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCurrencyResource::SWGCurrencyResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCurrencyResource::SWGCurrencyResource() {
    init();
}

SWGCurrencyResource::~SWGCurrencyResource() {
    this->cleanup();
}

void
SWGCurrencyResource::init() {
    active = false;
    code = new QString("");
    created_date = 0L;
    factor = 0.0;
    icon = new QString("");
    name = new QString("");
    type = new QString("");
    updated_date = 0L;
}

void
SWGCurrencyResource::cleanup() {
    

    if(code != nullptr) {
        delete code;
    }



    if(icon != nullptr) {
        delete icon;
    }

    if(name != nullptr) {
        delete name;
    }

    if(type != nullptr) {
        delete type;
    }

}

SWGCurrencyResource*
SWGCurrencyResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCurrencyResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&active, pJson["active"], "bool", "");
    ::Swagger::setValue(&code, pJson["code"], "QString", "QString");
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    ::Swagger::setValue(&factor, pJson["factor"], "double", "");
    ::Swagger::setValue(&icon, pJson["icon"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&type, pJson["type"], "QString", "QString");
    ::Swagger::setValue(&updated_date, pJson["updated_date"], "qint64", "");
}

QString
SWGCurrencyResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCurrencyResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("active", QJsonValue(active));

    toJsonValue(QString("code"), code, obj, QString("QString"));

    obj->insert("created_date", QJsonValue(created_date));

    obj->insert("factor", QJsonValue(factor));

    toJsonValue(QString("icon"), icon, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    toJsonValue(QString("type"), type, obj, QString("QString"));

    obj->insert("updated_date", QJsonValue(updated_date));

    return obj;
}

bool
SWGCurrencyResource::getActive() {
    return active;
}
void
SWGCurrencyResource::setActive(bool active) {
    this->active = active;
}

QString*
SWGCurrencyResource::getCode() {
    return code;
}
void
SWGCurrencyResource::setCode(QString* code) {
    this->code = code;
}

qint64
SWGCurrencyResource::getCreatedDate() {
    return created_date;
}
void
SWGCurrencyResource::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

double
SWGCurrencyResource::getFactor() {
    return factor;
}
void
SWGCurrencyResource::setFactor(double factor) {
    this->factor = factor;
}

QString*
SWGCurrencyResource::getIcon() {
    return icon;
}
void
SWGCurrencyResource::setIcon(QString* icon) {
    this->icon = icon;
}

QString*
SWGCurrencyResource::getName() {
    return name;
}
void
SWGCurrencyResource::setName(QString* name) {
    this->name = name;
}

QString*
SWGCurrencyResource::getType() {
    return type;
}
void
SWGCurrencyResource::setType(QString* type) {
    this->type = type;
}

qint64
SWGCurrencyResource::getUpdatedDate() {
    return updated_date;
}
void
SWGCurrencyResource::setUpdatedDate(qint64 updated_date) {
    this->updated_date = updated_date;
}



} /* namespace Swagger */

