/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGRawEmailResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGRawEmailResource::SWGRawEmailResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGRawEmailResource::SWGRawEmailResource() {
    init();
}

SWGRawEmailResource::~SWGRawEmailResource() {
    this->cleanup();
}

void
SWGRawEmailResource::init() {
    body = new QString("");
    from = new QString("");
    html = false;
    recipients = new QList<qint32>();
    subject = new QString("");
}

void
SWGRawEmailResource::cleanup() {
    
    if(body != nullptr) {
        delete body;
    }

    if(from != nullptr) {
        delete from;
    }



    if(subject != nullptr) {
        delete subject;
    }
}

SWGRawEmailResource*
SWGRawEmailResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGRawEmailResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&body, pJson["body"], "QString", "QString");
    ::Swagger::setValue(&from, pJson["from"], "QString", "QString");
    ::Swagger::setValue(&html, pJson["html"], "bool", "");
    
    
    ::Swagger::setValue(&recipients, pJson["recipients"], "QList", "qint32");
    ::Swagger::setValue(&subject, pJson["subject"], "QString", "QString");
}

QString
SWGRawEmailResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGRawEmailResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("body"), body, obj, QString("QString"));

    toJsonValue(QString("from"), from, obj, QString("QString"));

    obj->insert("html", QJsonValue(html));

    QJsonArray recipientsJsonArray;
    toJsonArray((QList<void*>*)recipients, &recipientsJsonArray, "recipients", "qint32");
    obj->insert("recipients", recipientsJsonArray);

    toJsonValue(QString("subject"), subject, obj, QString("QString"));

    return obj;
}

QString*
SWGRawEmailResource::getBody() {
    return body;
}
void
SWGRawEmailResource::setBody(QString* body) {
    this->body = body;
}

QString*
SWGRawEmailResource::getFrom() {
    return from;
}
void
SWGRawEmailResource::setFrom(QString* from) {
    this->from = from;
}

bool
SWGRawEmailResource::getHtml() {
    return html;
}
void
SWGRawEmailResource::setHtml(bool html) {
    this->html = html;
}

QList<qint32>*
SWGRawEmailResource::getRecipients() {
    return recipients;
}
void
SWGRawEmailResource::setRecipients(QList<qint32>* recipients) {
    this->recipients = recipients;
}

QString*
SWGRawEmailResource::getSubject() {
    return subject;
}
void
SWGRawEmailResource::setSubject(QString* subject) {
    this->subject = subject;
}



} /* namespace Swagger */

