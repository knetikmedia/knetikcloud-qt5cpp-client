/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGBRERuleEngineCategoriesApi_H_
#define _SWG_SWGBRERuleEngineCategoriesApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGBreCategoryResource.h"
#include "SWGPageResource«BreCategoryResource».h"
#include "SWGPageResource«TemplateResource».h"
#include "SWGResult.h"
#include "SWGTemplateResource.h"

#include <QObject>

namespace Swagger {

class SWGBRERuleEngineCategoriesApi: public QObject {
    Q_OBJECT

public:
    SWGBRERuleEngineCategoriesApi();
    SWGBRERuleEngineCategoriesApi(QString host, QString basePath);
    ~SWGBRERuleEngineCategoriesApi();

    QString host;
    QString basePath;

    void createBRECategoryTemplate(SWGTemplateResource template);
    void deleteBRECategoryTemplate(QString* id, QString* cascade);
    void getBRECategories(qint32 size, qint32 page);
    void getBRECategory(QString* name);
    void getBRECategoryTemplate(QString* id);
    void getBRECategoryTemplates(qint32 size, qint32 page, QString* order);
    void updateBRECategory(QString* name, SWGBreCategoryResource category);
    void updateBRECategoryTemplate(QString* id, SWGTemplateResource template);
    
private:
    void createBRECategoryTemplateCallback (HttpRequestWorker * worker);
    void deleteBRECategoryTemplateCallback (HttpRequestWorker * worker);
    void getBRECategoriesCallback (HttpRequestWorker * worker);
    void getBRECategoryCallback (HttpRequestWorker * worker);
    void getBRECategoryTemplateCallback (HttpRequestWorker * worker);
    void getBRECategoryTemplatesCallback (HttpRequestWorker * worker);
    void updateBRECategoryCallback (HttpRequestWorker * worker);
    void updateBRECategoryTemplateCallback (HttpRequestWorker * worker);
    
signals:
    void createBRECategoryTemplateSignal(SWGTemplateResource* summary);
    void deleteBRECategoryTemplateSignal();
    void getBRECategoriesSignal(SWGPageResource«BreCategoryResource»* summary);
    void getBRECategorySignal(SWGBreCategoryResource* summary);
    void getBRECategoryTemplateSignal(SWGTemplateResource* summary);
    void getBRECategoryTemplatesSignal(SWGPageResource«TemplateResource»* summary);
    void updateBRECategorySignal(SWGBreCategoryResource* summary);
    void updateBRECategoryTemplateSignal(SWGTemplateResource* summary);
    
};
}
#endif
