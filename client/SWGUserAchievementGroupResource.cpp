/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserAchievementGroupResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGUserAchievementGroupResource::SWGUserAchievementGroupResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGUserAchievementGroupResource::SWGUserAchievementGroupResource() {
    init();
}

SWGUserAchievementGroupResource::~SWGUserAchievementGroupResource() {
    this->cleanup();
}

void
SWGUserAchievementGroupResource::init() {
    achievements = new QList<SWGUserAchievementResource*>();
    group_name = new QString("");
    id = new QString("");
    progress = 0;
    user_id = 0;
}

void
SWGUserAchievementGroupResource::cleanup() {
    
    if(achievements != nullptr) {
        QList<SWGUserAchievementResource*>* arr = achievements;
        foreach(SWGUserAchievementResource* o, *arr) {
            delete o;
        }
        delete achievements;
    }

    if(group_name != nullptr) {
        delete group_name;
    }

    if(id != nullptr) {
        delete id;
    }


}

SWGUserAchievementGroupResource*
SWGUserAchievementGroupResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserAchievementGroupResource::fromJsonObject(QJsonObject &pJson) {
    
    ::Swagger::setValue(&achievements, pJson["achievements"], "QList", "SWGUserAchievementResource");
    
    ::Swagger::setValue(&group_name, pJson["group_name"], "QString", "QString");
    ::Swagger::setValue(&id, pJson["id"], "QString", "QString");
    ::Swagger::setValue(&progress, pJson["progress"], "qint32", "");
    ::Swagger::setValue(&user_id, pJson["user_id"], "qint32", "");
}

QString
SWGUserAchievementGroupResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGUserAchievementGroupResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    QJsonArray achievementsJsonArray;
    toJsonArray((QList<void*>*)achievements, &achievementsJsonArray, "achievements", "SWGUserAchievementResource");
    obj->insert("achievements", achievementsJsonArray);

    toJsonValue(QString("group_name"), group_name, obj, QString("QString"));

    toJsonValue(QString("id"), id, obj, QString("QString"));

    obj->insert("progress", QJsonValue(progress));

    obj->insert("user_id", QJsonValue(user_id));

    return obj;
}

QList<SWGUserAchievementResource*>*
SWGUserAchievementGroupResource::getAchievements() {
    return achievements;
}
void
SWGUserAchievementGroupResource::setAchievements(QList<SWGUserAchievementResource*>* achievements) {
    this->achievements = achievements;
}

QString*
SWGUserAchievementGroupResource::getGroupName() {
    return group_name;
}
void
SWGUserAchievementGroupResource::setGroupName(QString* group_name) {
    this->group_name = group_name;
}

QString*
SWGUserAchievementGroupResource::getId() {
    return id;
}
void
SWGUserAchievementGroupResource::setId(QString* id) {
    this->id = id;
}

qint32
SWGUserAchievementGroupResource::getProgress() {
    return progress;
}
void
SWGUserAchievementGroupResource::setProgress(qint32 progress) {
    this->progress = progress;
}

qint32
SWGUserAchievementGroupResource::getUserId() {
    return user_id;
}
void
SWGUserAchievementGroupResource::setUserId(qint32 user_id) {
    this->user_id = user_id;
}



} /* namespace Swagger */

