/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGAuthPermissionsApi_H_
#define _SWG_SWGAuthPermissionsApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGPageResource«PermissionResource».h"
#include "SWGPermissionResource.h"
#include "SWGResult.h"

#include <QObject>

namespace Swagger {

class SWGAuthPermissionsApi: public QObject {
    Q_OBJECT

public:
    SWGAuthPermissionsApi();
    SWGAuthPermissionsApi(QString host, QString basePath);
    ~SWGAuthPermissionsApi();

    QString host;
    QString basePath;

    void createPermission(SWGPermissionResource permission_resource);
    void deletePermission(QString* permission, bool force);
    void getPermission(QString* permission);
    void getPermissions(qint32 size, qint32 page, QString* order);
    void updatePermission(QString* permission, SWGPermissionResource permission_resource);
    
private:
    void createPermissionCallback (HttpRequestWorker * worker);
    void deletePermissionCallback (HttpRequestWorker * worker);
    void getPermissionCallback (HttpRequestWorker * worker);
    void getPermissionsCallback (HttpRequestWorker * worker);
    void updatePermissionCallback (HttpRequestWorker * worker);
    
signals:
    void createPermissionSignal(SWGPermissionResource* summary);
    void deletePermissionSignal();
    void getPermissionSignal(SWGPermissionResource* summary);
    void getPermissionsSignal(SWGPageResource«PermissionResource»* summary);
    void updatePermissionSignal(SWGPermissionResource* summary);
    
};
}
#endif
