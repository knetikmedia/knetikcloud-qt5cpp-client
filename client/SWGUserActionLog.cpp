/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserActionLog.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGUserActionLog::SWGUserActionLog(QString* json) {
    init();
    this->fromJson(*json);
}

SWGUserActionLog::SWGUserActionLog() {
    init();
}

SWGUserActionLog::~SWGUserActionLog() {
    this->cleanup();
}

void
SWGUserActionLog::init() {
    action_description = new QString("");
    action_name = new QString("");
    created_date = 0L;
    details = new QMap<QString, QString>();
    id = new QString("");
    request_id = new QString("");
    user_id = 0;
}

void
SWGUserActionLog::cleanup() {
    
    if(action_description != nullptr) {
        delete action_description;
    }

    if(action_name != nullptr) {
        delete action_name;
    }


    if(details != nullptr) {
        QList<QString*>* arr = details;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete details;
    }

    if(id != nullptr) {
        delete id;
    }

    if(request_id != nullptr) {
        delete request_id;
    }

}

SWGUserActionLog*
SWGUserActionLog::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserActionLog::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&action_description, pJson["action_description"], "QString", "QString");
    ::Swagger::setValue(&action_name, pJson["action_name"], "QString", "QString");
    ::Swagger::setValue(&created_date, pJson["created_date"], "qint64", "");
    
    ::Swagger::setValue(&details, pJson["details"], "QMap", "QString");
    
    ::Swagger::setValue(&id, pJson["id"], "QString", "QString");
    ::Swagger::setValue(&request_id, pJson["request_id"], "QString", "QString");
    ::Swagger::setValue(&user_id, pJson["user_id"], "qint32", "");
}

QString
SWGUserActionLog::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGUserActionLog::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("action_description"), action_description, obj, QString("QString"));

    toJsonValue(QString("action_name"), action_name, obj, QString("QString"));

    obj->insert("created_date", QJsonValue(created_date));

    QJsonArray detailsJsonArray;
    toJsonArray((QList<void*>*)details, &detailsJsonArray, "details", "QString");
    obj->insert("details", detailsJsonArray);

    toJsonValue(QString("id"), id, obj, QString("QString"));

    toJsonValue(QString("request_id"), request_id, obj, QString("QString"));

    obj->insert("user_id", QJsonValue(user_id));

    return obj;
}

QString*
SWGUserActionLog::getActionDescription() {
    return action_description;
}
void
SWGUserActionLog::setActionDescription(QString* action_description) {
    this->action_description = action_description;
}

QString*
SWGUserActionLog::getActionName() {
    return action_name;
}
void
SWGUserActionLog::setActionName(QString* action_name) {
    this->action_name = action_name;
}

qint64
SWGUserActionLog::getCreatedDate() {
    return created_date;
}
void
SWGUserActionLog::setCreatedDate(qint64 created_date) {
    this->created_date = created_date;
}

QMap<QString, QString*>*
SWGUserActionLog::getDetails() {
    return details;
}
void
SWGUserActionLog::setDetails(QMap<QString, QString*>* details) {
    this->details = details;
}

QString*
SWGUserActionLog::getId() {
    return id;
}
void
SWGUserActionLog::setId(QString* id) {
    this->id = id;
}

QString*
SWGUserActionLog::getRequestId() {
    return request_id;
}
void
SWGUserActionLog::setRequestId(QString* request_id) {
    this->request_id = request_id;
}

qint32
SWGUserActionLog::getUserId() {
    return user_id;
}
void
SWGUserActionLog::setUserId(qint32 user_id) {
    this->user_id = user_id;
}



} /* namespace Swagger */

