/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserInventoryAddRequest.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGUserInventoryAddRequest::SWGUserInventoryAddRequest(QString* json) {
    init();
    this->fromJson(*json);
}

SWGUserInventoryAddRequest::SWGUserInventoryAddRequest() {
    init();
}

SWGUserInventoryAddRequest::~SWGUserInventoryAddRequest() {
    this->cleanup();
}

void
SWGUserInventoryAddRequest::init() {
    note = new QString("");
    overrides = new QList<QString*>();
    skip_invoice = false;
    sku = new QString("");
}

void
SWGUserInventoryAddRequest::cleanup() {
    
    if(note != nullptr) {
        delete note;
    }

    if(overrides != nullptr) {
        QList<QString*>* arr = overrides;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete overrides;
    }


    if(sku != nullptr) {
        delete sku;
    }
}

SWGUserInventoryAddRequest*
SWGUserInventoryAddRequest::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserInventoryAddRequest::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&note, pJson["note"], "QString", "QString");
    
    ::Swagger::setValue(&overrides, pJson["overrides"], "QList", "QString");
    
    ::Swagger::setValue(&skip_invoice, pJson["skip_invoice"], "bool", "");
    ::Swagger::setValue(&sku, pJson["sku"], "QString", "QString");
}

QString
SWGUserInventoryAddRequest::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGUserInventoryAddRequest::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("note"), note, obj, QString("QString"));

    QJsonArray overridesJsonArray;
    toJsonArray((QList<void*>*)overrides, &overridesJsonArray, "overrides", "QString");
    obj->insert("overrides", overridesJsonArray);

    obj->insert("skip_invoice", QJsonValue(skip_invoice));

    toJsonValue(QString("sku"), sku, obj, QString("QString"));

    return obj;
}

QString*
SWGUserInventoryAddRequest::getNote() {
    return note;
}
void
SWGUserInventoryAddRequest::setNote(QString* note) {
    this->note = note;
}

QList<QString*>*
SWGUserInventoryAddRequest::getOverrides() {
    return overrides;
}
void
SWGUserInventoryAddRequest::setOverrides(QList<QString*>* overrides) {
    this->overrides = overrides;
}

bool
SWGUserInventoryAddRequest::getSkipInvoice() {
    return skip_invoice;
}
void
SWGUserInventoryAddRequest::setSkipInvoice(bool skip_invoice) {
    this->skip_invoice = skip_invoice;
}

QString*
SWGUserInventoryAddRequest::getSku() {
    return sku;
}
void
SWGUserInventoryAddRequest::setSku(QString* sku) {
    this->sku = sku;
}



} /* namespace Swagger */

