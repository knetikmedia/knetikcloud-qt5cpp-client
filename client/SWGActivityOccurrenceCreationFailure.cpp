/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGActivityOccurrenceCreationFailure.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGActivityOccurrenceCreationFailure::SWGActivityOccurrenceCreationFailure(QString* json) {
    init();
    this->fromJson(*json);
}

SWGActivityOccurrenceCreationFailure::SWGActivityOccurrenceCreationFailure() {
    init();
}

SWGActivityOccurrenceCreationFailure::~SWGActivityOccurrenceCreationFailure() {
    this->cleanup();
}

void
SWGActivityOccurrenceCreationFailure::init() {
    user_results = new QList<SWGActivityOccurrenceJoinResult*>();
}

void
SWGActivityOccurrenceCreationFailure::cleanup() {
    
    if(user_results != nullptr) {
        QList<SWGActivityOccurrenceJoinResult*>* arr = user_results;
        foreach(SWGActivityOccurrenceJoinResult* o, *arr) {
            delete o;
        }
        delete user_results;
    }
}

SWGActivityOccurrenceCreationFailure*
SWGActivityOccurrenceCreationFailure::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGActivityOccurrenceCreationFailure::fromJsonObject(QJsonObject &pJson) {
    
    ::Swagger::setValue(&user_results, pJson["user_results"], "QList", "SWGActivityOccurrenceJoinResult");
    
}

QString
SWGActivityOccurrenceCreationFailure::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGActivityOccurrenceCreationFailure::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    QJsonArray user_resultsJsonArray;
    toJsonArray((QList<void*>*)user_results, &user_resultsJsonArray, "user_results", "SWGActivityOccurrenceJoinResult");
    obj->insert("user_results", user_resultsJsonArray);

    return obj;
}

QList<SWGActivityOccurrenceJoinResult*>*
SWGActivityOccurrenceCreationFailure::getUserResults() {
    return user_results;
}
void
SWGActivityOccurrenceCreationFailure::setUserResults(QList<SWGActivityOccurrenceJoinResult*>* user_results) {
    this->user_results = user_results;
}



} /* namespace Swagger */

