/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGPaymentAuthorizationResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGPaymentAuthorizationResource::SWGPaymentAuthorizationResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPaymentAuthorizationResource::SWGPaymentAuthorizationResource() {
    init();
}

SWGPaymentAuthorizationResource::~SWGPaymentAuthorizationResource() {
    this->cleanup();
}

void
SWGPaymentAuthorizationResource::init() {
    captured = false;
    created = 0L;
    details = NULL;
    id = 0;
    invoice = 0;
    payment_type = new SWGSimpleReferenceResource«int»();
}

void
SWGPaymentAuthorizationResource::cleanup() {
    


    if(details != nullptr) {
        delete details;
    }



    if(payment_type != nullptr) {
        delete payment_type;
    }
}

SWGPaymentAuthorizationResource*
SWGPaymentAuthorizationResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPaymentAuthorizationResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&captured, pJson["captured"], "bool", "");
    ::Swagger::setValue(&created, pJson["created"], "qint64", "");
    ::Swagger::setValue(&details, pJson["details"], "SWGObject", "SWGObject");
    ::Swagger::setValue(&id, pJson["id"], "qint32", "");
    ::Swagger::setValue(&invoice, pJson["invoice"], "qint32", "");
    ::Swagger::setValue(&payment_type, pJson["payment_type"], "SWGSimpleReferenceResource«int»", "SWGSimpleReferenceResource«int»");
}

QString
SWGPaymentAuthorizationResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPaymentAuthorizationResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("captured", QJsonValue(captured));

    obj->insert("created", QJsonValue(created));

    toJsonValue(QString("details"), details, obj, QString("SWGObject"));

    obj->insert("id", QJsonValue(id));

    obj->insert("invoice", QJsonValue(invoice));

    toJsonValue(QString("payment_type"), payment_type, obj, QString("SWGSimpleReferenceResource«int»"));

    return obj;
}

bool
SWGPaymentAuthorizationResource::getCaptured() {
    return captured;
}
void
SWGPaymentAuthorizationResource::setCaptured(bool captured) {
    this->captured = captured;
}

qint64
SWGPaymentAuthorizationResource::getCreated() {
    return created;
}
void
SWGPaymentAuthorizationResource::setCreated(qint64 created) {
    this->created = created;
}

SWGObject*
SWGPaymentAuthorizationResource::getDetails() {
    return details;
}
void
SWGPaymentAuthorizationResource::setDetails(SWGObject* details) {
    this->details = details;
}

qint32
SWGPaymentAuthorizationResource::getId() {
    return id;
}
void
SWGPaymentAuthorizationResource::setId(qint32 id) {
    this->id = id;
}

qint32
SWGPaymentAuthorizationResource::getInvoice() {
    return invoice;
}
void
SWGPaymentAuthorizationResource::setInvoice(qint32 invoice) {
    this->invoice = invoice;
}

SWGSimpleReferenceResource«int»*
SWGPaymentAuthorizationResource::getPaymentType() {
    return payment_type;
}
void
SWGPaymentAuthorizationResource::setPaymentType(SWGSimpleReferenceResource«int»* payment_type) {
    this->payment_type = payment_type;
}



} /* namespace Swagger */

