/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGContributionResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGContributionResource::SWGContributionResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGContributionResource::SWGContributionResource() {
    init();
}

SWGContributionResource::~SWGContributionResource() {
    this->cleanup();
}

void
SWGContributionResource::init() {
    artist = new SWGSimpleReferenceResource«long»();
    media = new SWGSimpleReferenceResource«long»();
    role = new QString("");
}

void
SWGContributionResource::cleanup() {
    
    if(artist != nullptr) {
        delete artist;
    }

    if(media != nullptr) {
        delete media;
    }

    if(role != nullptr) {
        delete role;
    }
}

SWGContributionResource*
SWGContributionResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGContributionResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&artist, pJson["artist"], "SWGSimpleReferenceResource«long»", "SWGSimpleReferenceResource«long»");
    ::Swagger::setValue(&media, pJson["media"], "SWGSimpleReferenceResource«long»", "SWGSimpleReferenceResource«long»");
    ::Swagger::setValue(&role, pJson["role"], "QString", "QString");
}

QString
SWGContributionResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGContributionResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("artist"), artist, obj, QString("SWGSimpleReferenceResource«long»"));

    toJsonValue(QString("media"), media, obj, QString("SWGSimpleReferenceResource«long»"));

    toJsonValue(QString("role"), role, obj, QString("QString"));

    return obj;
}

SWGSimpleReferenceResource«long»*
SWGContributionResource::getArtist() {
    return artist;
}
void
SWGContributionResource::setArtist(SWGSimpleReferenceResource«long»* artist) {
    this->artist = artist;
}

SWGSimpleReferenceResource«long»*
SWGContributionResource::getMedia() {
    return media;
}
void
SWGContributionResource::setMedia(SWGSimpleReferenceResource«long»* media) {
    this->media = media;
}

QString*
SWGContributionResource::getRole() {
    return role;
}
void
SWGContributionResource::setRole(QString* role) {
    this->role = role;
}



} /* namespace Swagger */

