/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGResult.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGResult::SWGResult(QString* json) {
    init();
    this->fromJson(*json);
}

SWGResult::SWGResult() {
    init();
}

SWGResult::~SWGResult() {
    this->cleanup();
}

void
SWGResult::init() {
    code = 0;
    request_id = new QString("");
    result = new QList<SWGErrorResource*>();
}

void
SWGResult::cleanup() {
    

    if(request_id != nullptr) {
        delete request_id;
    }

    if(result != nullptr) {
        QList<SWGErrorResource*>* arr = result;
        foreach(SWGErrorResource* o, *arr) {
            delete o;
        }
        delete result;
    }
}

SWGResult*
SWGResult::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGResult::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&code, pJson["code"], "qint32", "");
    ::Swagger::setValue(&request_id, pJson["request_id"], "QString", "QString");
    
    ::Swagger::setValue(&result, pJson["result"], "QList", "SWGErrorResource");
    
}

QString
SWGResult::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGResult::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("code", QJsonValue(code));

    toJsonValue(QString("request_id"), request_id, obj, QString("QString"));

    QJsonArray resultJsonArray;
    toJsonArray((QList<void*>*)result, &resultJsonArray, "result", "SWGErrorResource");
    obj->insert("result", resultJsonArray);

    return obj;
}

qint32
SWGResult::getCode() {
    return code;
}
void
SWGResult::setCode(qint32 code) {
    this->code = code;
}

QString*
SWGResult::getRequestId() {
    return request_id;
}
void
SWGResult::setRequestId(QString* request_id) {
    this->request_id = request_id;
}

QList<SWGErrorResource*>*
SWGResult::getResult() {
    return result;
}
void
SWGResult::setResult(QList<SWGErrorResource*>* result) {
    this->result = result;
}



} /* namespace Swagger */

