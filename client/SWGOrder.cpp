/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGOrder.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGOrder::SWGOrder(QString* json) {
    init();
    this->fromJson(*json);
}

SWGOrder::SWGOrder() {
    init();
}

SWGOrder::~SWGOrder() {
    this->cleanup();
}

void
SWGOrder::init() {
    ascending = false;
    direction = new QString("");
    ignore_case = false;
    null_handling = new QString("");
    property = new QString("");
}

void
SWGOrder::cleanup() {
    

    if(direction != nullptr) {
        delete direction;
    }


    if(null_handling != nullptr) {
        delete null_handling;
    }

    if(property != nullptr) {
        delete property;
    }
}

SWGOrder*
SWGOrder::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGOrder::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&ascending, pJson["ascending"], "bool", "");
    ::Swagger::setValue(&direction, pJson["direction"], "QString", "QString");
    ::Swagger::setValue(&ignore_case, pJson["ignore_case"], "bool", "");
    ::Swagger::setValue(&null_handling, pJson["null_handling"], "QString", "QString");
    ::Swagger::setValue(&property, pJson["property"], "QString", "QString");
}

QString
SWGOrder::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGOrder::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("ascending", QJsonValue(ascending));

    toJsonValue(QString("direction"), direction, obj, QString("QString"));

    obj->insert("ignore_case", QJsonValue(ignore_case));

    toJsonValue(QString("null_handling"), null_handling, obj, QString("QString"));

    toJsonValue(QString("property"), property, obj, QString("QString"));

    return obj;
}

bool
SWGOrder::getAscending() {
    return ascending;
}
void
SWGOrder::setAscending(bool ascending) {
    this->ascending = ascending;
}

QString*
SWGOrder::getDirection() {
    return direction;
}
void
SWGOrder::setDirection(QString* direction) {
    this->direction = direction;
}

bool
SWGOrder::getIgnoreCase() {
    return ignore_case;
}
void
SWGOrder::setIgnoreCase(bool ignore_case) {
    this->ignore_case = ignore_case;
}

QString*
SWGOrder::getNullHandling() {
    return null_handling;
}
void
SWGOrder::setNullHandling(QString* null_handling) {
    this->null_handling = null_handling;
}

QString*
SWGOrder::getProperty() {
    return property;
}
void
SWGOrder::setProperty(QString* property) {
    this->property = property;
}



} /* namespace Swagger */

