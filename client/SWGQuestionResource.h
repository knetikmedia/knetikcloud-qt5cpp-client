/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGQuestionResource.h
 * 
 * 
 */

#ifndef SWGQuestionResource_H_
#define SWGQuestionResource_H_

#include <QJsonObject>


#include "SWGAnswerResource.h"
#include "SWGNestedCategory.h"
#include "SWGProperty.h"
#include <QList>
#include <QMap>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGQuestionResource: public SWGObject {
public:
    SWGQuestionResource();
    SWGQuestionResource(QString* json);
    virtual ~SWGQuestionResource();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGQuestionResource* fromJson(QString &jsonString);

    QMap<QString, SWGProperty*>* getAdditionalProperties();
    void setAdditionalProperties(QMap<QString, SWGProperty*>* additional_properties);

    QList<SWGAnswerResource*>* getAnswers();
    void setAnswers(QList<SWGAnswerResource*>* answers);

    SWGNestedCategory* getCategory();
    void setCategory(SWGNestedCategory* category);

    qint64 getCreatedDate();
    void setCreatedDate(qint64 created_date);

    qint32 getDifficulty();
    void setDifficulty(qint32 difficulty);

    QString* getId();
    void setId(QString* id);

    qint64 getImportId();
    void setImportId(qint64 import_id);

    qint64 getPublishedDate();
    void setPublishedDate(qint64 published_date);

    SWGProperty* getQuestion();
    void setQuestion(SWGProperty* question);

    QString* getSource1();
    void setSource1(QString* source1);

    QString* getSource2();
    void setSource2(QString* source2);

    QList<QString*>* getTags();
    void setTags(QList<QString*>* tags);

    QString* getTemplate();
    void setTemplate(QString* template);

    qint64 getUpdatedDate();
    void setUpdatedDate(qint64 updated_date);

    QString* getVendor();
    void setVendor(QString* vendor);


private:
    QMap<QString, SWGProperty*>* additional_properties;
    QList<SWGAnswerResource*>* answers;
    SWGNestedCategory* category;
    qint64 created_date;
    qint32 difficulty;
    QString* id;
    qint64 import_id;
    qint64 published_date;
    SWGProperty* question;
    QString* source1;
    QString* source2;
    QList<QString*>* tags;
    QString* template;
    qint64 updated_date;
    QString* vendor;
};

} /* namespace Swagger */

#endif /* SWGQuestionResource_H_ */
