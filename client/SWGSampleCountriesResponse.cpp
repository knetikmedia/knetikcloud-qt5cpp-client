/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGSampleCountriesResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSampleCountriesResponse::SWGSampleCountriesResponse(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSampleCountriesResponse::SWGSampleCountriesResponse() {
    init();
}

SWGSampleCountriesResponse::~SWGSampleCountriesResponse() {
    this->cleanup();
}

void
SWGSampleCountriesResponse::init() {
    vendor_id1 = new QList<SWGCountry*>();
    vendor_id2 = new QList<SWGCountry*>();
}

void
SWGSampleCountriesResponse::cleanup() {
    
    if(vendor_id1 != nullptr) {
        QList<SWGCountry*>* arr = vendor_id1;
        foreach(SWGCountry* o, *arr) {
            delete o;
        }
        delete vendor_id1;
    }

    if(vendor_id2 != nullptr) {
        QList<SWGCountry*>* arr = vendor_id2;
        foreach(SWGCountry* o, *arr) {
            delete o;
        }
        delete vendor_id2;
    }
}

SWGSampleCountriesResponse*
SWGSampleCountriesResponse::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSampleCountriesResponse::fromJsonObject(QJsonObject &pJson) {
    
    ::Swagger::setValue(&vendor_id1, pJson["vendor_id1"], "QList", "SWGCountry");
    
    
    ::Swagger::setValue(&vendor_id2, pJson["vendor_id2"], "QList", "SWGCountry");
    
}

QString
SWGSampleCountriesResponse::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSampleCountriesResponse::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    QJsonArray vendor_id1JsonArray;
    toJsonArray((QList<void*>*)vendor_id1, &vendor_id1JsonArray, "vendor_id1", "SWGCountry");
    obj->insert("vendor_id1", vendor_id1JsonArray);

    QJsonArray vendor_id2JsonArray;
    toJsonArray((QList<void*>*)vendor_id2, &vendor_id2JsonArray, "vendor_id2", "SWGCountry");
    obj->insert("vendor_id2", vendor_id2JsonArray);

    return obj;
}

QList<SWGCountry*>*
SWGSampleCountriesResponse::getVendorId1() {
    return vendor_id1;
}
void
SWGSampleCountriesResponse::setVendorId1(QList<SWGCountry*>* vendor_id1) {
    this->vendor_id1 = vendor_id1;
}

QList<SWGCountry*>*
SWGSampleCountriesResponse::getVendorId2() {
    return vendor_id2;
}
void
SWGSampleCountriesResponse::setVendorId2(QList<SWGCountry*>* vendor_id2) {
    this->vendor_id2 = vendor_id2;
}



} /* namespace Swagger */

