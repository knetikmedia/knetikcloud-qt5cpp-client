/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGSimpleUserResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSimpleUserResource::SWGSimpleUserResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSimpleUserResource::SWGSimpleUserResource() {
    init();
}

SWGSimpleUserResource::~SWGSimpleUserResource() {
    this->cleanup();
}

void
SWGSimpleUserResource::init() {
    avatar_url = new QString("");
    display_name = new QString("");
    id = 0;
    username = new QString("");
}

void
SWGSimpleUserResource::cleanup() {
    
    if(avatar_url != nullptr) {
        delete avatar_url;
    }

    if(display_name != nullptr) {
        delete display_name;
    }


    if(username != nullptr) {
        delete username;
    }
}

SWGSimpleUserResource*
SWGSimpleUserResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSimpleUserResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&avatar_url, pJson["avatar_url"], "QString", "QString");
    ::Swagger::setValue(&display_name, pJson["display_name"], "QString", "QString");
    ::Swagger::setValue(&id, pJson["id"], "qint32", "");
    ::Swagger::setValue(&username, pJson["username"], "QString", "QString");
}

QString
SWGSimpleUserResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSimpleUserResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("avatar_url"), avatar_url, obj, QString("QString"));

    toJsonValue(QString("display_name"), display_name, obj, QString("QString"));

    obj->insert("id", QJsonValue(id));

    toJsonValue(QString("username"), username, obj, QString("QString"));

    return obj;
}

QString*
SWGSimpleUserResource::getAvatarUrl() {
    return avatar_url;
}
void
SWGSimpleUserResource::setAvatarUrl(QString* avatar_url) {
    this->avatar_url = avatar_url;
}

QString*
SWGSimpleUserResource::getDisplayName() {
    return display_name;
}
void
SWGSimpleUserResource::setDisplayName(QString* display_name) {
    this->display_name = display_name;
}

qint32
SWGSimpleUserResource::getId() {
    return id;
}
void
SWGSimpleUserResource::setId(qint32 id) {
    this->id = id;
}

QString*
SWGSimpleUserResource::getUsername() {
    return username;
}
void
SWGSimpleUserResource::setUsername(QString* username) {
    this->username = username;
}



} /* namespace Swagger */

