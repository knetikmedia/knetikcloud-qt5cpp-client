/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGClientResource.h
 * 
 * 
 */

#ifndef SWGClientResource_H_
#define SWGClientResource_H_

#include <QJsonObject>


#include <QList>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGClientResource: public SWGObject {
public:
    SWGClientResource();
    SWGClientResource(QString* json);
    virtual ~SWGClientResource();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGClientResource* fromJson(QString &jsonString);

    qint32 getAccessTokenValiditySeconds();
    void setAccessTokenValiditySeconds(qint32 access_token_validity_seconds);

    QString* getClientKey();
    void setClientKey(QString* client_key);

    QList<QString*>* getGrantTypes();
    void setGrantTypes(QList<QString*>* grant_types);

    qint32 getId();
    void setId(qint32 id);

    bool getIsPublic();
    void setIsPublic(bool is_public);

    bool getLocked();
    void setLocked(bool locked);

    QString* getName();
    void setName(QString* name);

    QList<QString*>* getRedirectUris();
    void setRedirectUris(QList<QString*>* redirect_uris);

    qint32 getRefreshTokenValiditySeconds();
    void setRefreshTokenValiditySeconds(qint32 refresh_token_validity_seconds);

    QString* getSecret();
    void setSecret(QString* secret);


private:
    qint32 access_token_validity_seconds;
    QString* client_key;
    QList<QString*>* grant_types;
    qint32 id;
    bool is_public;
    bool locked;
    QString* name;
    QList<QString*>* redirect_uris;
    qint32 refresh_token_validity_seconds;
    QString* secret;
};

} /* namespace Swagger */

#endif /* SWGClientResource_H_ */
