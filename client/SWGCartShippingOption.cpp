/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGCartShippingOption.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCartShippingOption::SWGCartShippingOption(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCartShippingOption::SWGCartShippingOption() {
    init();
}

SWGCartShippingOption::~SWGCartShippingOption() {
    this->cleanup();
}

void
SWGCartShippingOption::init() {
    currency_code = new QString("");
    description = new QString("");
    name = new QString("");
    original_price = 0.0;
    price = 0.0;
    shipping_item_id = 0;
    sku = new QString("");
    taxable = false;
    vendor_id = 0;
    vendor_name = new QString("");
}

void
SWGCartShippingOption::cleanup() {
    
    if(currency_code != nullptr) {
        delete currency_code;
    }

    if(description != nullptr) {
        delete description;
    }

    if(name != nullptr) {
        delete name;
    }




    if(sku != nullptr) {
        delete sku;
    }



    if(vendor_name != nullptr) {
        delete vendor_name;
    }
}

SWGCartShippingOption*
SWGCartShippingOption::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCartShippingOption::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&currency_code, pJson["currency_code"], "QString", "QString");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&original_price, pJson["original_price"], "double", "");
    ::Swagger::setValue(&price, pJson["price"], "double", "");
    ::Swagger::setValue(&shipping_item_id, pJson["shipping_item_id"], "qint32", "");
    ::Swagger::setValue(&sku, pJson["sku"], "QString", "QString");
    ::Swagger::setValue(&taxable, pJson["taxable"], "bool", "");
    ::Swagger::setValue(&vendor_id, pJson["vendor_id"], "qint32", "");
    ::Swagger::setValue(&vendor_name, pJson["vendor_name"], "QString", "QString");
}

QString
SWGCartShippingOption::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCartShippingOption::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("currency_code"), currency_code, obj, QString("QString"));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    obj->insert("original_price", QJsonValue(original_price));

    obj->insert("price", QJsonValue(price));

    obj->insert("shipping_item_id", QJsonValue(shipping_item_id));

    toJsonValue(QString("sku"), sku, obj, QString("QString"));

    obj->insert("taxable", QJsonValue(taxable));

    obj->insert("vendor_id", QJsonValue(vendor_id));

    toJsonValue(QString("vendor_name"), vendor_name, obj, QString("QString"));

    return obj;
}

QString*
SWGCartShippingOption::getCurrencyCode() {
    return currency_code;
}
void
SWGCartShippingOption::setCurrencyCode(QString* currency_code) {
    this->currency_code = currency_code;
}

QString*
SWGCartShippingOption::getDescription() {
    return description;
}
void
SWGCartShippingOption::setDescription(QString* description) {
    this->description = description;
}

QString*
SWGCartShippingOption::getName() {
    return name;
}
void
SWGCartShippingOption::setName(QString* name) {
    this->name = name;
}

double
SWGCartShippingOption::getOriginalPrice() {
    return original_price;
}
void
SWGCartShippingOption::setOriginalPrice(double original_price) {
    this->original_price = original_price;
}

double
SWGCartShippingOption::getPrice() {
    return price;
}
void
SWGCartShippingOption::setPrice(double price) {
    this->price = price;
}

qint32
SWGCartShippingOption::getShippingItemId() {
    return shipping_item_id;
}
void
SWGCartShippingOption::setShippingItemId(qint32 shipping_item_id) {
    this->shipping_item_id = shipping_item_id;
}

QString*
SWGCartShippingOption::getSku() {
    return sku;
}
void
SWGCartShippingOption::setSku(QString* sku) {
    this->sku = sku;
}

bool
SWGCartShippingOption::getTaxable() {
    return taxable;
}
void
SWGCartShippingOption::setTaxable(bool taxable) {
    this->taxable = taxable;
}

qint32
SWGCartShippingOption::getVendorId() {
    return vendor_id;
}
void
SWGCartShippingOption::setVendorId(qint32 vendor_id) {
    this->vendor_id = vendor_id;
}

QString*
SWGCartShippingOption::getVendorName() {
    return vendor_name;
}
void
SWGCartShippingOption::setVendorName(QString* vendor_name) {
    this->vendor_name = vendor_name;
}



} /* namespace Swagger */

