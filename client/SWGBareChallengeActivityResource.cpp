/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGBareChallengeActivityResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGBareChallengeActivityResource::SWGBareChallengeActivityResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGBareChallengeActivityResource::SWGBareChallengeActivityResource() {
    init();
}

SWGBareChallengeActivityResource::~SWGBareChallengeActivityResource() {
    this->cleanup();
}

void
SWGBareChallengeActivityResource::init() {
    activity_id = 0L;
    challenge_id = 0L;
    id = 0L;
}

void
SWGBareChallengeActivityResource::cleanup() {
    


}

SWGBareChallengeActivityResource*
SWGBareChallengeActivityResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGBareChallengeActivityResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&activity_id, pJson["activity_id"], "qint64", "");
    ::Swagger::setValue(&challenge_id, pJson["challenge_id"], "qint64", "");
    ::Swagger::setValue(&id, pJson["id"], "qint64", "");
}

QString
SWGBareChallengeActivityResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGBareChallengeActivityResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("activity_id", QJsonValue(activity_id));

    obj->insert("challenge_id", QJsonValue(challenge_id));

    obj->insert("id", QJsonValue(id));

    return obj;
}

qint64
SWGBareChallengeActivityResource::getActivityId() {
    return activity_id;
}
void
SWGBareChallengeActivityResource::setActivityId(qint64 activity_id) {
    this->activity_id = activity_id;
}

qint64
SWGBareChallengeActivityResource::getChallengeId() {
    return challenge_id;
}
void
SWGBareChallengeActivityResource::setChallengeId(qint64 challenge_id) {
    this->challenge_id = challenge_id;
}

qint64
SWGBareChallengeActivityResource::getId() {
    return id;
}
void
SWGBareChallengeActivityResource::setId(qint64 id) {
    this->id = id;
}



} /* namespace Swagger */

