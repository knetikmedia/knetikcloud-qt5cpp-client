/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGStoreShippingApi_H_
#define _SWG_SWGStoreShippingApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGItemTemplateResource.h"
#include "SWGPageResource«ItemTemplateResource».h"
#include "SWGResult.h"
#include "SWGShippingItem.h"

#include <QObject>

namespace Swagger {

class SWGStoreShippingApi: public QObject {
    Q_OBJECT

public:
    SWGStoreShippingApi();
    SWGStoreShippingApi(QString host, QString basePath);
    ~SWGStoreShippingApi();

    QString host;
    QString basePath;

    void createShippingItem(bool cascade, SWGShippingItem shipping_item);
    void createShippingTemplate(SWGItemTemplateResource shipping_template_resource);
    void deleteShippingItem(qint32 id);
    void deleteShippingTemplate(QString* id, QString* cascade);
    void getShippingItem(qint32 id);
    void getShippingTemplate(QString* id);
    void getShippingTemplates(qint32 size, qint32 page, QString* order);
    void updateShippingItem(qint32 id, bool cascade, SWGShippingItem shipping_item);
    void updateShippingTemplate(QString* id, SWGItemTemplateResource shipping_template_resource);
    
private:
    void createShippingItemCallback (HttpRequestWorker * worker);
    void createShippingTemplateCallback (HttpRequestWorker * worker);
    void deleteShippingItemCallback (HttpRequestWorker * worker);
    void deleteShippingTemplateCallback (HttpRequestWorker * worker);
    void getShippingItemCallback (HttpRequestWorker * worker);
    void getShippingTemplateCallback (HttpRequestWorker * worker);
    void getShippingTemplatesCallback (HttpRequestWorker * worker);
    void updateShippingItemCallback (HttpRequestWorker * worker);
    void updateShippingTemplateCallback (HttpRequestWorker * worker);
    
signals:
    void createShippingItemSignal(SWGShippingItem* summary);
    void createShippingTemplateSignal(SWGItemTemplateResource* summary);
    void deleteShippingItemSignal();
    void deleteShippingTemplateSignal();
    void getShippingItemSignal(SWGShippingItem* summary);
    void getShippingTemplateSignal(SWGItemTemplateResource* summary);
    void getShippingTemplatesSignal(SWGPageResource«ItemTemplateResource»* summary);
    void updateShippingItemSignal(SWGShippingItem* summary);
    void updateShippingTemplateSignal(SWGItemTemplateResource* summary);
    
};
}
#endif
