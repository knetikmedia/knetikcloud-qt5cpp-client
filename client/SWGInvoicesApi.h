/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGInvoicesApi_H_
#define _SWG_SWGInvoicesApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGAddressResource.h"
#include "SWGInvoiceCreateRequest.h"
#include "SWGInvoicePaymentStatusRequest.h"
#include "SWGInvoiceResource.h"
#include "SWGPageResource«InvoiceLogEntry».h"
#include "SWGPageResource«InvoiceResource».h"
#include "SWGPayBySavedMethodRequest.h"
#include "SWGResult.h"

#include <QObject>

namespace Swagger {

class SWGInvoicesApi: public QObject {
    Q_OBJECT

public:
    SWGInvoicesApi();
    SWGInvoicesApi(QString host, QString basePath);
    ~SWGInvoicesApi();

    QString host;
    QString basePath;

    void createInvoice(SWGInvoiceCreateRequest req);
    void getFulFillmentStatuses();
    void getInvoice(qint32 id);
    void getInvoiceLogs(qint32 id, qint32 size, qint32 page);
    void getInvoices(qint32 filter_user, QString* filter_email, QString* filter_fulfillment_status, QString* filter_payment_status, QString* filter_item_name, QString* filter_external_ref, QString* filter_created_date, QString* filter_vendor_ids, QString* filter_currency, QString* filter_shipping_state_name, QString* filter_shipping_country_name, float filter_shipping, QString* filter_vendor_name, QString* filter_sku, qint32 size, qint32 page, QString* order);
    void getPaymentStatuses();
    void payInvoice(qint32 id, SWGPayBySavedMethodRequest request);
    void setExternalRef(qint32 id, QString* external_ref);
    void setInvoiceItemFulfillmentStatus(qint32 id, QString* sku, QString* status);
    void setOrderNotes(qint32 id, QString* order_notes);
    void setPaymentStatus(qint32 id, SWGInvoicePaymentStatusRequest request);
    void updateBillingInfo(qint32 id, SWGAddressResource billing_info_request);
    
private:
    void createInvoiceCallback (HttpRequestWorker * worker);
    void getFulFillmentStatusesCallback (HttpRequestWorker * worker);
    void getInvoiceCallback (HttpRequestWorker * worker);
    void getInvoiceLogsCallback (HttpRequestWorker * worker);
    void getInvoicesCallback (HttpRequestWorker * worker);
    void getPaymentStatusesCallback (HttpRequestWorker * worker);
    void payInvoiceCallback (HttpRequestWorker * worker);
    void setExternalRefCallback (HttpRequestWorker * worker);
    void setInvoiceItemFulfillmentStatusCallback (HttpRequestWorker * worker);
    void setOrderNotesCallback (HttpRequestWorker * worker);
    void setPaymentStatusCallback (HttpRequestWorker * worker);
    void updateBillingInfoCallback (HttpRequestWorker * worker);
    
signals:
    void createInvoiceSignal(QList<SWGInvoiceResource*>* summary);
    void getFulFillmentStatusesSignal(QList<QString*>* summary);
    void getInvoiceSignal(SWGInvoiceResource* summary);
    void getInvoiceLogsSignal(SWGPageResource«InvoiceLogEntry»* summary);
    void getInvoicesSignal(SWGPageResource«InvoiceResource»* summary);
    void getPaymentStatusesSignal(QList<QString*>* summary);
    void payInvoiceSignal();
    void setExternalRefSignal();
    void setInvoiceItemFulfillmentStatusSignal();
    void setOrderNotesSignal();
    void setPaymentStatusSignal();
    void updateBillingInfoSignal();
    
};
}
#endif
