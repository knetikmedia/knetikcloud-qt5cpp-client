/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGLogsApi_H_
#define _SWG_SWGLogsApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGBreEventLog.h"
#include "SWGForwardLog.h"
#include "SWGPageResource«BreEventLog».h"
#include "SWGPageResource«ForwardLog».h"
#include "SWGPageResource«UserActionLog».h"
#include "SWGResult.h"
#include "SWGUserActionLog.h"

#include <QObject>

namespace Swagger {

class SWGLogsApi: public QObject {
    Q_OBJECT

public:
    SWGLogsApi();
    SWGLogsApi(QString host, QString basePath);
    ~SWGLogsApi();

    QString host;
    QString basePath;

    void addUserLog(SWGUserActionLog log_entry);
    void getBREEventLog(QString* id);
    void getBREEventLogs(QString* filter_start_date, QString* filter_event_name, qint32 size, qint32 page, QString* order);
    void getBREForwardLog(QString* id);
    void getBREForwardLogs(QString* filter_start_date, QString* filter_end_date, qint32 filter_status_code, qint32 size, qint32 page, QString* order);
    void getUserLog(QString* id);
    void getUserLogs(qint32 filter_user, QString* filter_action_name, qint32 size, qint32 page);
    
private:
    void addUserLogCallback (HttpRequestWorker * worker);
    void getBREEventLogCallback (HttpRequestWorker * worker);
    void getBREEventLogsCallback (HttpRequestWorker * worker);
    void getBREForwardLogCallback (HttpRequestWorker * worker);
    void getBREForwardLogsCallback (HttpRequestWorker * worker);
    void getUserLogCallback (HttpRequestWorker * worker);
    void getUserLogsCallback (HttpRequestWorker * worker);
    
signals:
    void addUserLogSignal();
    void getBREEventLogSignal(SWGBreEventLog* summary);
    void getBREEventLogsSignal(SWGPageResource«BreEventLog»* summary);
    void getBREForwardLogSignal(SWGForwardLog* summary);
    void getBREForwardLogsSignal(SWGPageResource«ForwardLog»* summary);
    void getUserLogSignal(SWGUserActionLog* summary);
    void getUserLogsSignal(SWGPageResource«UserActionLog»* summary);
    
};
}
#endif
