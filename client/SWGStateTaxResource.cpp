/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGStateTaxResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGStateTaxResource::SWGStateTaxResource(QString* json) {
    init();
    this->fromJson(*json);
}

SWGStateTaxResource::SWGStateTaxResource() {
    init();
}

SWGStateTaxResource::~SWGStateTaxResource() {
    this->cleanup();
}

void
SWGStateTaxResource::init() {
    country_iso3 = new QString("");
    federally_exempt = false;
    name = new QString("");
    rate = 0.0;
    state_code = new QString("");
    tax_shipping = false;
}

void
SWGStateTaxResource::cleanup() {
    
    if(country_iso3 != nullptr) {
        delete country_iso3;
    }


    if(name != nullptr) {
        delete name;
    }


    if(state_code != nullptr) {
        delete state_code;
    }

}

SWGStateTaxResource*
SWGStateTaxResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGStateTaxResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&country_iso3, pJson["country_iso3"], "QString", "QString");
    ::Swagger::setValue(&federally_exempt, pJson["federally_exempt"], "bool", "");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&rate, pJson["rate"], "double", "");
    ::Swagger::setValue(&state_code, pJson["state_code"], "QString", "QString");
    ::Swagger::setValue(&tax_shipping, pJson["tax_shipping"], "bool", "");
}

QString
SWGStateTaxResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGStateTaxResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("country_iso3"), country_iso3, obj, QString("QString"));

    obj->insert("federally_exempt", QJsonValue(federally_exempt));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    obj->insert("rate", QJsonValue(rate));

    toJsonValue(QString("state_code"), state_code, obj, QString("QString"));

    obj->insert("tax_shipping", QJsonValue(tax_shipping));

    return obj;
}

QString*
SWGStateTaxResource::getCountryIso3() {
    return country_iso3;
}
void
SWGStateTaxResource::setCountryIso3(QString* country_iso3) {
    this->country_iso3 = country_iso3;
}

bool
SWGStateTaxResource::getFederallyExempt() {
    return federally_exempt;
}
void
SWGStateTaxResource::setFederallyExempt(bool federally_exempt) {
    this->federally_exempt = federally_exempt;
}

QString*
SWGStateTaxResource::getName() {
    return name;
}
void
SWGStateTaxResource::setName(QString* name) {
    this->name = name;
}

double
SWGStateTaxResource::getRate() {
    return rate;
}
void
SWGStateTaxResource::setRate(double rate) {
    this->rate = rate;
}

QString*
SWGStateTaxResource::getStateCode() {
    return state_code;
}
void
SWGStateTaxResource::setStateCode(QString* state_code) {
    this->state_code = state_code;
}

bool
SWGStateTaxResource::getTaxShipping() {
    return tax_shipping;
}
void
SWGStateTaxResource::setTaxShipping(bool tax_shipping) {
    this->tax_shipping = tax_shipping;
}



} /* namespace Swagger */

