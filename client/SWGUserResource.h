/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGUserResource.h
 * 
 * 
 */

#ifndef SWGUserResource_H_
#define SWGUserResource_H_

#include <QJsonObject>


#include "SWGProperty.h"
#include "SWGUserRelationshipReferenceResource.h"
#include <QList>
#include <QMap>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGUserResource: public SWGObject {
public:
    SWGUserResource();
    SWGUserResource(QString* json);
    virtual ~SWGUserResource();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGUserResource* fromJson(QString &jsonString);

    QMap<QString, SWGProperty*>* getAdditionalProperties();
    void setAdditionalProperties(QMap<QString, SWGProperty*>* additional_properties);

    QString* getAddress();
    void setAddress(QString* address);

    QString* getAddress2();
    void setAddress2(QString* address2);

    QString* getAvatarUrl();
    void setAvatarUrl(QString* avatar_url);

    QList<SWGUserRelationshipReferenceResource*>* getChildren();
    void setChildren(QList<SWGUserRelationshipReferenceResource*>* children);

    QString* getCity();
    void setCity(QString* city);

    QString* getCountryCode();
    void setCountryCode(QString* country_code);

    QString* getCurrencyCode();
    void setCurrencyCode(QString* currency_code);

    qint64 getDateOfBirth();
    void setDateOfBirth(qint64 date_of_birth);

    QString* getDescription();
    void setDescription(QString* description);

    QString* getDisplayName();
    void setDisplayName(QString* display_name);

    QString* getEmail();
    void setEmail(QString* email);

    QString* getFirstName();
    void setFirstName(QString* first_name);

    QString* getFullname();
    void setFullname(QString* fullname);

    QString* getGender();
    void setGender(QString* gender);

    qint32 getId();
    void setId(qint32 id);

    QString* getLanguageCode();
    void setLanguageCode(QString* language_code);

    QString* getLastName();
    void setLastName(QString* last_name);

    QString* getMobileNumber();
    void setMobileNumber(QString* mobile_number);

    QList<SWGUserRelationshipReferenceResource*>* getParents();
    void setParents(QList<SWGUserRelationshipReferenceResource*>* parents);

    QString* getPassword();
    void setPassword(QString* password);

    QString* getPostalCode();
    void setPostalCode(QString* postal_code);

    QString* getState();
    void setState(QString* state);

    QList<QString*>* getTags();
    void setTags(QList<QString*>* tags);

    QString* getTemplate();
    void setTemplate(QString* template);

    QString* getTimezoneCode();
    void setTimezoneCode(QString* timezone_code);

    QString* getUsername();
    void setUsername(QString* username);


private:
    QMap<QString, SWGProperty*>* additional_properties;
    QString* address;
    QString* address2;
    QString* avatar_url;
    QList<SWGUserRelationshipReferenceResource*>* children;
    QString* city;
    QString* country_code;
    QString* currency_code;
    qint64 date_of_birth;
    QString* description;
    QString* display_name;
    QString* email;
    QString* first_name;
    QString* fullname;
    QString* gender;
    qint32 id;
    QString* language_code;
    QString* last_name;
    QString* mobile_number;
    QList<SWGUserRelationshipReferenceResource*>* parents;
    QString* password;
    QString* postal_code;
    QString* state;
    QList<QString*>* tags;
    QString* template;
    QString* timezone_code;
    QString* username;
};

} /* namespace Swagger */

#endif /* SWGUserResource_H_ */
