/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGLanguage.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGLanguage::SWGLanguage(QString* json) {
    init();
    this->fromJson(*json);
}

SWGLanguage::SWGLanguage() {
    init();
}

SWGLanguage::~SWGLanguage() {
    this->cleanup();
}

void
SWGLanguage::init() {
    code = new QString("");
    date_created = 0L;
    date_updated = 0L;
    description = new QString("");
    direction = new QString("");
    id = 0;
    is_primary = false;
    name = new QString("");
}

void
SWGLanguage::cleanup() {
    
    if(code != nullptr) {
        delete code;
    }



    if(description != nullptr) {
        delete description;
    }

    if(direction != nullptr) {
        delete direction;
    }



    if(name != nullptr) {
        delete name;
    }
}

SWGLanguage*
SWGLanguage::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGLanguage::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&code, pJson["code"], "QString", "QString");
    ::Swagger::setValue(&date_created, pJson["date_created"], "qint64", "");
    ::Swagger::setValue(&date_updated, pJson["date_updated"], "qint64", "");
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&direction, pJson["direction"], "QString", "QString");
    ::Swagger::setValue(&id, pJson["id"], "qint32", "");
    ::Swagger::setValue(&is_primary, pJson["is_primary"], "bool", "");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
}

QString
SWGLanguage::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGLanguage::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("code"), code, obj, QString("QString"));

    obj->insert("date_created", QJsonValue(date_created));

    obj->insert("date_updated", QJsonValue(date_updated));

    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("direction"), direction, obj, QString("QString"));

    obj->insert("id", QJsonValue(id));

    obj->insert("is_primary", QJsonValue(is_primary));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    return obj;
}

QString*
SWGLanguage::getCode() {
    return code;
}
void
SWGLanguage::setCode(QString* code) {
    this->code = code;
}

qint64
SWGLanguage::getDateCreated() {
    return date_created;
}
void
SWGLanguage::setDateCreated(qint64 date_created) {
    this->date_created = date_created;
}

qint64
SWGLanguage::getDateUpdated() {
    return date_updated;
}
void
SWGLanguage::setDateUpdated(qint64 date_updated) {
    this->date_updated = date_updated;
}

QString*
SWGLanguage::getDescription() {
    return description;
}
void
SWGLanguage::setDescription(QString* description) {
    this->description = description;
}

QString*
SWGLanguage::getDirection() {
    return direction;
}
void
SWGLanguage::setDirection(QString* direction) {
    this->direction = direction;
}

qint32
SWGLanguage::getId() {
    return id;
}
void
SWGLanguage::setId(qint32 id) {
    this->id = id;
}

bool
SWGLanguage::getIsPrimary() {
    return is_primary;
}
void
SWGLanguage::setIsPrimary(bool is_primary) {
    this->is_primary = is_primary;
}

QString*
SWGLanguage::getName() {
    return name;
}
void
SWGLanguage::setName(QString* name) {
    this->name = name;
}



} /* namespace Swagger */

